{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.2","compilation":{"directory":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55],"program":"/Users/swilkins/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","encoding_rs","/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.17/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=14221e8f13036659","-C","extra-filename=-14221e8f13036659","--out-dir","/Users/swilkins/projects/personal/advent/target/rls/debug/deps","-L","dependency=/Users/swilkins/projects/personal/advent/target/rls/debug/deps","--extern","cfg_if=/Users/swilkins/projects/personal/advent/target/rls/debug/deps/libcfg_if-8f8b4e3d5185768b.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/swilkins/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,112,114,111,106,101,99,116,115,47,112,101,114,115,111,110,97,108,47,97,100,118,101,110,116,47,116,97,114,103,101,116,47,114,108,115,47,100,101,98,117,103,47,100,101,112,115,47,108,105,98,101,110,99,111,100,105,110,103,95,114,115,45,49,52,50,50,49,101,56,102,49,51,48,51,54,54,53,57,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"encoding_rs","disambiguator":[7554422369855454996,9161613887164488139]},"crate_root":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.17/src","external_crates":[{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.17/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[1174904389790056627,11980377943522478020]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.17/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[10276658452371951978,13955158368012629210]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.17/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6212298039852757345,13056973723602582898]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.17/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[2472034652193248465,17026985867558116202]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.17/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3739559732288738709,15577672448928610229]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.17/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[3280591782733940230,2391034779898666253]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.17/src/lib.rs","num":7,"id":{"name":"rustc_demangle","disambiguator":[17768744230194090356,6249204898376423079]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.17/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[18294290771476076947,9562268468698684298]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.17/src/lib.rs","num":9,"id":{"name":"backtrace_sys","disambiguator":[6239912042412093818,71364874345811638]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.17/src/lib.rs","num":10,"id":{"name":"panic_unwind","disambiguator":[17618422533075753481,12682123369635823587]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.17/src/lib.rs","num":11,"id":{"name":"cfg_if","disambiguator":[8507095715086889429,10830784638613307922]}}],"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":424,"byte_end":233296,"line_start":10,"line_end":5687,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":424,"byte_end":233296,"line_start":10,"line_end":5687,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.17/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":40},{"krate":0,"index":76},{"krate":0,"index":122},{"krate":0,"index":166},{"krate":0,"index":216},{"krate":0,"index":264},{"krate":0,"index":286},{"krate":0,"index":326},{"krate":0,"index":368},{"krate":0,"index":390},{"krate":0,"index":448},{"krate":0,"index":480},{"krate":0,"index":524},{"krate":0,"index":690},{"krate":0,"index":1114},{"krate":0,"index":1178},{"krate":0,"index":1276},{"krate":0,"index":1278},{"krate":0,"index":1280},{"krate":0,"index":1282},{"krate":0,"index":1284},{"krate":0,"index":1286},{"krate":0,"index":1288},{"krate":0,"index":1290},{"krate":0,"index":1292},{"krate":0,"index":1294},{"krate":0,"index":1296},{"krate":0,"index":1298},{"krate":0,"index":1300},{"krate":0,"index":1302},{"krate":0,"index":1304},{"krate":0,"index":1306},{"krate":0,"index":1308},{"krate":0,"index":1310},{"krate":0,"index":1312},{"krate":0,"index":1314},{"krate":0,"index":1316},{"krate":0,"index":1318},{"krate":0,"index":1320},{"krate":0,"index":1322},{"krate":0,"index":1324},{"krate":0,"index":1326},{"krate":0,"index":1328},{"krate":0,"index":1330},{"krate":0,"index":1332},{"krate":0,"index":1334},{"krate":0,"index":1336},{"krate":0,"index":1338},{"krate":0,"index":1340},{"krate":0,"index":1342},{"krate":0,"index":1344},{"krate":0,"index":1346},{"krate":0,"index":1348},{"krate":0,"index":1350},{"krate":0,"index":1352},{"krate":0,"index":1354},{"krate":0,"index":1356},{"krate":0,"index":1358},{"krate":0,"index":1360},{"krate":0,"index":1362},{"krate":0,"index":1364},{"krate":0,"index":1366},{"krate":0,"index":1368},{"krate":0,"index":1370},{"krate":0,"index":1372},{"krate":0,"index":1374},{"krate":0,"index":1376},{"krate":0,"index":1378},{"krate":0,"index":1380},{"krate":0,"index":1382},{"krate":0,"index":1384},{"krate":0,"index":1386},{"krate":0,"index":1388},{"krate":0,"index":1390},{"krate":0,"index":1392},{"krate":0,"index":1394},{"krate":0,"index":1396},{"krate":0,"index":1398},{"krate":0,"index":1400},{"krate":0,"index":1402},{"krate":0,"index":1404},{"krate":0,"index":1406},{"krate":0,"index":1408},{"krate":0,"index":1410},{"krate":0,"index":1412},{"krate":0,"index":1414},{"krate":0,"index":1416},{"krate":0,"index":1418},{"krate":0,"index":1420},{"krate":0,"index":1422},{"krate":0,"index":1424},{"krate":0,"index":1426},{"krate":0,"index":1428},{"krate":0,"index":1430},{"krate":0,"index":1432},{"krate":0,"index":1434},{"krate":0,"index":1436},{"krate":0,"index":1438},{"krate":0,"index":1440},{"krate":0,"index":1442},{"krate":0,"index":1444},{"krate":0,"index":1446},{"krate":0,"index":1448},{"krate":0,"index":1450},{"krate":0,"index":1452},{"krate":0,"index":1454},{"krate":0,"index":1456},{"krate":0,"index":1458},{"krate":0,"index":1460},{"krate":0,"index":1462},{"krate":0,"index":1508},{"krate":0,"index":1512},{"krate":0,"index":1514},{"krate":0,"index":1518},{"krate":0,"index":1772},{"krate":0,"index":1784},{"krate":0,"index":1780},{"krate":0,"index":1778},{"krate":0,"index":1774},{"krate":0,"index":1788},{"krate":0,"index":1796},{"krate":0,"index":1794},{"krate":0,"index":1790},{"krate":0,"index":1800},{"krate":0,"index":1810},{"krate":0,"index":1806},{"krate":0,"index":1802},{"krate":0,"index":1814},{"krate":0,"index":1826},{"krate":0,"index":1820},{"krate":0,"index":1816},{"krate":0,"index":1522},{"krate":0,"index":1524},{"krate":0,"index":1850},{"krate":0,"index":1862},{"krate":0,"index":1856},{"krate":0,"index":1852},{"krate":0,"index":1548},{"krate":0,"index":1552},{"krate":0,"index":1554},{"krate":0,"index":1582},{"krate":0,"index":1584},{"krate":0,"index":1586},{"krate":0,"index":1588},{"krate":0,"index":1590},{"krate":0,"index":1592},{"krate":0,"index":1594},{"krate":0,"index":1596},{"krate":0,"index":1598},{"krate":0,"index":1600},{"krate":0,"index":1602},{"krate":0,"index":1604},{"krate":0,"index":1606}],"decl_id":null,"docs":" encoding_rs is a Gecko-oriented Free Software / Open Source implementation\n of the [Encoding Standard](https://encoding.spec.whatwg.org/) in Rust.\n Gecko-oriented means that converting to and from UTF-16 is supported in\n addition to converting to and from UTF-8, that the performance and\n streamability goals are browser-oriented, and that FFI-friendliness is a\n goal.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1178},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,109,101,109,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mem","qualname":"::mem","value":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.17/src/mem.rs","parent":null,"children":[{"krate":0,"index":1180},{"krate":0,"index":1182},{"krate":0,"index":1184},{"krate":0,"index":1186},{"krate":0,"index":1188},{"krate":0,"index":1190},{"krate":0,"index":1192},{"krate":0,"index":1194},{"krate":0,"index":1196},{"krate":0,"index":1198},{"krate":0,"index":1740},{"krate":0,"index":1742},{"krate":0,"index":1744},{"krate":0,"index":1754},{"krate":0,"index":1750},{"krate":0,"index":1746},{"krate":0,"index":1200},{"krate":0,"index":1202},{"krate":0,"index":1204},{"krate":0,"index":1760},{"krate":0,"index":1762},{"krate":0,"index":1764},{"krate":0,"index":1758},{"krate":0,"index":1206},{"krate":0,"index":1766},{"krate":0,"index":1208},{"krate":0,"index":1768},{"krate":0,"index":1770},{"krate":0,"index":1210},{"krate":0,"index":1212},{"krate":0,"index":1214},{"krate":0,"index":1216},{"krate":0,"index":1218},{"krate":0,"index":1220},{"krate":0,"index":1222},{"krate":0,"index":1224},{"krate":0,"index":1226},{"krate":0,"index":1228},{"krate":0,"index":1230},{"krate":0,"index":1232},{"krate":0,"index":1234},{"krate":0,"index":1236},{"krate":0,"index":1238},{"krate":0,"index":1240},{"krate":0,"index":1242},{"krate":0,"index":1244},{"krate":0,"index":1246},{"krate":0,"index":1248},{"krate":0,"index":1250},{"krate":0,"index":1252},{"krate":0,"index":1254},{"krate":0,"index":1256},{"krate":0,"index":1258},{"krate":0,"index":1260},{"krate":0,"index":1262},{"krate":0,"index":1264},{"krate":0,"index":1266},{"krate":0,"index":1268},{"krate":0,"index":1270},{"krate":0,"index":1272},{"krate":0,"index":1274}],"decl_id":null,"docs":" Functions for converting between different in-RAM representations of text\n and for quickly checking if the Unicode Bidirectional Algorithm can be\n avoided.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":815},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3300346,"byte_end":3300352,"line_start":65,"line_end":65,"column_start":5,"column_end":11},"name":"Latin1","qualname":"::mem::Latin1Bidi::Latin1","value":"Latin1Bidi::Latin1","parent":{"krate":0,"index":1744},"children":[],"decl_id":null,"docs":" Every character is below U+0100.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":819},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3300478,"byte_end":3300489,"line_start":68,"line_end":68,"column_start":5,"column_end":16},"name":"LeftToRight","qualname":"::mem::Latin1Bidi::LeftToRight","value":"Latin1Bidi::LeftToRight","parent":{"krate":0,"index":1744},"children":[],"decl_id":null,"docs":" There is at least one character that's U+0100 or higher, but there\n are no right-to-left characters.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":823},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3300554,"byte_end":3300558,"line_start":70,"line_end":70,"column_start":5,"column_end":9},"name":"Bidi","qualname":"::mem::Latin1Bidi::Bidi","value":"Latin1Bidi::Bidi","parent":{"krate":0,"index":1744},"children":[],"decl_id":null,"docs":" There is at least one right-to-left character.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1744},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3300288,"byte_end":3300298,"line_start":63,"line_end":63,"column_start":10,"column_end":20},"name":"Latin1Bidi","qualname":"::mem::Latin1Bidi","value":"Latin1Bidi::{Latin1, LeftToRight, Bidi}","parent":null,"children":[{"krate":0,"index":815},{"krate":0,"index":819},{"krate":0,"index":823}],"decl_id":null,"docs":" Classification of text as Latin1 (all code points are below U+0100),\n left-to-right with some non-Latin1 characters or as containing at least\n some right-to-left characters.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3300224,"byte_end":3300235,"line_start":60,"line_end":60,"column_start":1,"column_end":12}},{"value":"repr(C)","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3300268,"byte_end":3300278,"line_start":62,"line_end":62,"column_start":1,"column_end":11}},{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3300279,"byte_end":3300565,"line_start":63,"line_end":71,"column_start":1,"column_end":2}}]},{"kind":"Function","id":{"krate":0,"index":1210},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3324556,"byte_end":3324564,"line_start":634,"line_end":634,"column_start":8,"column_end":16},"name":"is_ascii","qualname":"::mem::is_ascii","value":"fn (buffer: &[u8]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the buffer is all-ASCII.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1212},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3324848,"byte_end":3324862,"line_start":643,"line_end":643,"column_start":8,"column_end":22},"name":"is_basic_latin","qualname":"::mem::is_basic_latin","value":"fn (buffer: &[u16]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the buffer is all-Basic Latin (i.e. UTF-16 representing\n only ASCII characters).","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1214},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3325178,"byte_end":3325192,"line_start":652,"line_end":652,"column_start":8,"column_end":22},"name":"is_utf8_latin1","qualname":"::mem::is_utf8_latin1","value":"fn (buffer: &[u8]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the buffer is valid UTF-8 representing only code points\n less than or equal to U+00FF.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1216},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3325479,"byte_end":3325492,"line_start":661,"line_end":661,"column_start":8,"column_end":21},"name":"is_str_latin1","qualname":"::mem::is_str_latin1","value":"fn (buffer: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the buffer represents only code point less than or equal\n to U+00FF.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1218},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3325779,"byte_end":3325794,"line_start":670,"line_end":670,"column_start":8,"column_end":23},"name":"is_utf16_latin1","qualname":"::mem::is_utf16_latin1","value":"fn (buffer: &[u16]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the buffer represents only code point less than or equal\n to U+00FF.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1220},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3326912,"byte_end":3326924,"line_start":692,"line_end":692,"column_start":8,"column_end":20},"name":"is_utf8_bidi","qualname":"::mem::is_utf8_bidi","value":"fn (buffer: &[u8]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether a potentially-invalid UTF-8 buffer contains code points\n that trigger right-to-left processing.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3326895,"byte_end":3326904,"line_start":691,"line_end":691,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1222},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3346264,"byte_end":3346275,"line_start":1122,"line_end":1122,"column_start":8,"column_end":19},"name":"is_str_bidi","qualname":"::mem::is_str_bidi","value":"fn (buffer: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether a valid UTF-8 buffer contains code points that trigger\n right-to-left processing.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3346247,"byte_end":3346256,"line_start":1121,"line_end":1121,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1224},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3353051,"byte_end":3353064,"line_start":1281,"line_end":1281,"column_start":8,"column_end":21},"name":"is_utf16_bidi","qualname":"::mem::is_utf16_bidi","value":"fn (buffer: &[u16]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether a UTF-16 buffer contains code points that trigger\n right-to-left processing.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1226},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3353876,"byte_end":3353888,"line_start":1297,"line_end":1297,"column_start":8,"column_end":20},"name":"is_char_bidi","qualname":"::mem::is_char_bidi","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether a code point triggers right-to-left processing.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3353851,"byte_end":3353868,"line_start":1296,"line_end":1296,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":1228},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3356822,"byte_end":3356845,"line_start":1372,"line_end":1372,"column_start":8,"column_end":31},"name":"is_utf16_code_unit_bidi","qualname":"::mem::is_utf16_code_unit_bidi","value":"fn (u: u16) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether a UTF-16 code unit triggers right-to-left processing.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3356797,"byte_end":3356814,"line_start":1371,"line_end":1371,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":1230},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3358197,"byte_end":3358227,"line_start":1413,"line_end":1413,"column_start":8,"column_end":38},"name":"check_utf8_for_latin1_and_bidi","qualname":"::mem::check_utf8_for_latin1_and_bidi","value":"fn (buffer: &[u8]) -> Latin1Bidi","parent":null,"children":[],"decl_id":null,"docs":" Checks whether a potentially invalid UTF-8 buffer contains code points\n that trigger right-to-left processing or is all-Latin1.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1232},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3358911,"byte_end":3358940,"line_start":1433,"line_end":1433,"column_start":8,"column_end":37},"name":"check_str_for_latin1_and_bidi","qualname":"::mem::check_str_for_latin1_and_bidi","value":"fn (buffer: &str) -> Latin1Bidi","parent":null,"children":[],"decl_id":null,"docs":" Checks whether a valid UTF-8 buffer contains code points\n that trigger right-to-left processing or is all-Latin1.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1234},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3359764,"byte_end":3359795,"line_start":1455,"line_end":1455,"column_start":8,"column_end":39},"name":"check_utf16_for_latin1_and_bidi","qualname":"::mem::check_utf16_for_latin1_and_bidi","value":"fn (buffer: &[u16]) -> Latin1Bidi","parent":null,"children":[],"decl_id":null,"docs":" Checks whether a potentially invalid UTF-16 buffer contains code points\n that trigger right-to-left processing or is all-Latin1.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1236},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3360243,"byte_end":3360264,"line_start":1470,"line_end":1470,"column_start":8,"column_end":29},"name":"convert_utf8_to_utf16","qualname":"::mem::convert_utf8_to_utf16","value":"fn (src: &[u8], dst: &mut [u16]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Converts potentially-invalid UTF-8 to valid UTF-16 with errors replaced\n with the REPLACEMENT CHARACTER.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1238},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3361610,"byte_end":3361630,"line_start":1509,"line_end":1509,"column_start":8,"column_end":28},"name":"convert_str_to_utf16","qualname":"::mem::convert_str_to_utf16","value":"fn (src: &str, dst: &mut [u16]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Converts valid UTF-8 to valid UTF-16.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1240},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3365981,"byte_end":3366010,"line_start":1620,"line_end":1620,"column_start":8,"column_end":37},"name":"convert_utf16_to_utf8_partial","qualname":"::mem::convert_utf16_to_utf8_partial","value":"fn (src: &[u16], dst: &mut [u8]) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Converts potentially-invalid UTF-16 to valid UTF-8 with errors replaced\n with the REPLACEMENT CHARACTER with potentially insufficient output\n space.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3365956,"byte_end":3365973,"line_start":1619,"line_end":1619,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":1242},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3367459,"byte_end":3367480,"line_start":1655,"line_end":1655,"column_start":8,"column_end":29},"name":"convert_utf16_to_utf8","qualname":"::mem::convert_utf16_to_utf8","value":"fn (src: &[u16], dst: &mut [u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Converts potentially-invalid UTF-16 to valid UTF-8 with errors replaced\n with the REPLACEMENT CHARACTER.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3367434,"byte_end":3367451,"line_start":1654,"line_end":1654,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":1244},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3368349,"byte_end":3368377,"line_start":1675,"line_end":1675,"column_start":8,"column_end":36},"name":"convert_utf16_to_str_partial","qualname":"::mem::convert_utf16_to_str_partial","value":"fn (src: &[u16], dst: &mut str) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Converts potentially-invalid UTF-16 to valid UTF-8 with errors replaced\n with the REPLACEMENT CHARACTER such that the validity of the output is\n signaled using the Rust type system with potentially insufficient output\n space.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1246},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3369204,"byte_end":3369224,"line_start":1700,"line_end":1700,"column_start":8,"column_end":28},"name":"convert_utf16_to_str","qualname":"::mem::convert_utf16_to_str","value":"fn (src: &[u16], dst: &mut str) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Converts potentially-invalid UTF-16 to valid UTF-8 with errors replaced\n with the REPLACEMENT CHARACTER such that the validity of the output is\n signaled using the Rust type system.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3369179,"byte_end":3369196,"line_start":1699,"line_end":1699,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":1248},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3369823,"byte_end":3369846,"line_start":1718,"line_end":1718,"column_start":8,"column_end":31},"name":"convert_latin1_to_utf16","qualname":"::mem::convert_latin1_to_utf16","value":"fn (src: &[u8], dst: &mut [u16]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Converts bytes whose unsigned value is interpreted as Unicode code point\n (i.e. U+0000 to U+00FF, inclusive) to UTF-16.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1250},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3370884,"byte_end":3370914,"line_start":1745,"line_end":1745,"column_start":8,"column_end":38},"name":"convert_latin1_to_utf8_partial","qualname":"::mem::convert_latin1_to_utf8_partial","value":"fn (src: &[u8], dst: &mut [u8]) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Converts bytes whose unsigned value is interpreted as Unicode code point\n (i.e. U+0000 to U+00FF, inclusive) to UTF-8 with potentially insufficient\n output space.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1252},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3372833,"byte_end":3372855,"line_start":1801,"line_end":1801,"column_start":8,"column_end":30},"name":"convert_latin1_to_utf8","qualname":"::mem::convert_latin1_to_utf8","value":"fn (src: &[u8], dst: &mut [u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Converts bytes whose unsigned value is interpreted as Unicode code point\n (i.e. U+0000 to U+00FF, inclusive) to UTF-8.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3372816,"byte_end":3372825,"line_start":1800,"line_end":1800,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1254},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3373555,"byte_end":3373584,"line_start":1820,"line_end":1820,"column_start":8,"column_end":37},"name":"convert_latin1_to_str_partial","qualname":"::mem::convert_latin1_to_str_partial","value":"fn (src: &[u8], dst: &mut str) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Converts bytes whose unsigned value is interpreted as Unicode code point\n (i.e. U+0000 to U+00FF, inclusive) to UTF-8 such that the validity of the\n output is signaled using the Rust type system with potentially insufficient\n output space.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3373538,"byte_end":3373547,"line_start":1819,"line_end":1819,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1256},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3374552,"byte_end":3374573,"line_start":1850,"line_end":1850,"column_start":8,"column_end":29},"name":"convert_latin1_to_str","qualname":"::mem::convert_latin1_to_str","value":"fn (src: &[u8], dst: &mut str) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Converts bytes whose unsigned value is interpreted as Unicode code point\n (i.e. U+0000 to U+00FF, inclusive) to UTF-8 such that the validity of the\n output is signaled using the Rust type system.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3374535,"byte_end":3374544,"line_start":1849,"line_end":1849,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1258},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3375906,"byte_end":3375934,"line_start":1883,"line_end":1883,"column_start":8,"column_end":36},"name":"convert_utf8_to_latin1_lossy","qualname":"::mem::convert_utf8_to_latin1_lossy","value":"fn (src: &[u8], dst: &mut [u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" If the input is valid UTF-8 representing only Unicode code points from\n U+0000 to U+00FF, inclusive, converts the input into output that\n represents the value of each code point as the unsigned byte value of\n each output byte.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1260},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3378135,"byte_end":3378164,"line_start":1945,"line_end":1945,"column_start":8,"column_end":37},"name":"convert_utf16_to_latin1_lossy","qualname":"::mem::convert_utf16_to_latin1_lossy","value":"fn (src: &[u16], dst: &mut [u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" If the input is valid UTF-16 representing only Unicode code points from\n U+0000 to U+00FF, inclusive, converts the input into output that\n represents the value of each code point as the unsigned byte value of\n each output byte.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1262},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3378668,"byte_end":3378681,"line_start":1961,"line_end":1961,"column_start":8,"column_end":21},"name":"decode_latin1","qualname":"::mem::decode_latin1","value":"fn <'a> (bytes: &'a [u8]) -> Cow<'a, str>","parent":null,"children":[],"decl_id":null,"docs":" Converts bytes whose unsigned value is interpreted as Unicode code point\n (i.e. U+0000 to U+00FF, inclusive) to UTF-8.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1264},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3380188,"byte_end":3380207,"line_start":1995,"line_end":1995,"column_start":8,"column_end":27},"name":"encode_latin1_lossy","qualname":"::mem::encode_latin1_lossy","value":"fn <'a> (string: &'a str) -> Cow<'a, [u8]>","parent":null,"children":[],"decl_id":null,"docs":" If the input is valid UTF-8 representing only Unicode code points from\n U+0000 to U+00FF, inclusive, converts the input into output that\n represents the value of each code point as the unsigned byte value of\n each output byte.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1266},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3380991,"byte_end":3381008,"line_start":2017,"line_end":2017,"column_start":8,"column_end":25},"name":"utf16_valid_up_to","qualname":"::mem::utf16_valid_up_to","value":"fn (buffer: &[u16]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the index of the first unpaired surrogate or, if the input is\n valid UTF-16 in its entirety, the length of the input.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1268},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3381169,"byte_end":3381190,"line_start":2023,"line_end":2023,"column_start":8,"column_end":29},"name":"ensure_utf16_validity","qualname":"::mem::ensure_utf16_validity","value":"fn (buffer: &mut [u16]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Replaces unpaired surrogates in the input with the REPLACEMENT CHARACTER.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3381152,"byte_end":3381161,"line_start":2022,"line_end":2022,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1270},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3381809,"byte_end":3381828,"line_start":2046,"line_end":2046,"column_start":8,"column_end":27},"name":"copy_ascii_to_ascii","qualname":"::mem::copy_ascii_to_ascii","value":"fn (src: &[u8], dst: &mut [u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Copies ASCII from source to destination up to the first non-ASCII byte\n (or the end of the input if it is ASCII in its entirety).","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1272},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3382561,"byte_end":3382586,"line_start":2072,"line_end":2072,"column_start":8,"column_end":33},"name":"copy_ascii_to_basic_latin","qualname":"::mem::copy_ascii_to_basic_latin","value":"fn (src: &[u8], dst: &mut [u16]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Copies ASCII from source to destination zero-extending it to UTF-16 up to\n the first non-ASCII byte (or the end of the input if it is ASCII in its\n entirety).","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1274},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,109,101,109,46,114,115],"byte_start":3383342,"byte_end":3383367,"line_start":2098,"line_end":2098,"column_start":8,"column_end":33},"name":"copy_basic_latin_to_ascii","qualname":"::mem::copy_basic_latin_to_ascii","value":"fn (src: &[u16], dst: &mut [u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Copies Basic Latin from source to destination narrowing it to ASCII up to\n the first non-Basic Latin code unit (or the end of the input if it is\n Basic Latin in its entirety).","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1296},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":42875,"byte_end":42884,"line_start":769,"line_end":769,"column_start":12,"column_end":21},"name":"BIG5_INIT","qualname":"::BIG5_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [Big5](static.BIG5.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1298},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":44074,"byte_end":44078,"line_start":797,"line_end":797,"column_start":12,"column_end":16},"name":"BIG5","qualname":"::BIG5","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The Big5 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1300},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":44705,"byte_end":44716,"line_start":811,"line_end":811,"column_start":12,"column_end":23},"name":"EUC_JP_INIT","qualname":"::EUC_JP_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [EUC-JP](static.EUC_JP.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1302},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":45692,"byte_end":45698,"line_start":835,"line_end":835,"column_start":12,"column_end":18},"name":"EUC_JP","qualname":"::EUC_JP","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The EUC-JP encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1304},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":46327,"byte_end":46338,"line_start":849,"line_end":849,"column_start":12,"column_end":23},"name":"EUC_KR_INIT","qualname":"::EUC_KR_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [EUC-KR](static.EUC_KR.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1306},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":47295,"byte_end":47301,"line_start":871,"line_end":871,"column_start":12,"column_end":18},"name":"EUC_KR","qualname":"::EUC_KR","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The EUC-KR encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1308},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":47924,"byte_end":47932,"line_start":885,"line_end":885,"column_start":12,"column_end":20},"name":"GBK_INIT","qualname":"::GBK_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [GBK](static.GBK.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1310},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":49217,"byte_end":49220,"line_start":913,"line_end":913,"column_start":12,"column_end":15},"name":"GBK","qualname":"::GBK","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The GBK encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1312},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":49846,"byte_end":49857,"line_start":927,"line_end":927,"column_start":12,"column_end":23},"name":"IBM866_INIT","qualname":"::IBM866_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [IBM866](static.IBM866.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1314},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":50648,"byte_end":50654,"line_start":947,"line_end":947,"column_start":12,"column_end":18},"name":"IBM866","qualname":"::IBM866","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The IBM866 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1316},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":51293,"byte_end":51309,"line_start":961,"line_end":961,"column_start":12,"column_end":28},"name":"ISO_2022_JP_INIT","qualname":"::ISO_2022_JP_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-2022-JP](static.ISO_2022_JP.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1318},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":52206,"byte_end":52217,"line_start":983,"line_end":983,"column_start":12,"column_end":23},"name":"ISO_2022_JP","qualname":"::ISO_2022_JP","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-2022-JP encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1320},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":52861,"byte_end":52877,"line_start":997,"line_end":997,"column_start":12,"column_end":28},"name":"ISO_8859_10_INIT","qualname":"::ISO_8859_10_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-8859-10](static.ISO_8859_10.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1322},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":53670,"byte_end":53681,"line_start":1017,"line_end":1017,"column_start":12,"column_end":23},"name":"ISO_8859_10","qualname":"::ISO_8859_10","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-10 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1324},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":54325,"byte_end":54341,"line_start":1031,"line_end":1031,"column_start":12,"column_end":28},"name":"ISO_8859_13_INIT","qualname":"::ISO_8859_13_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-8859-13](static.ISO_8859_13.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1326},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":55161,"byte_end":55172,"line_start":1051,"line_end":1051,"column_start":12,"column_end":23},"name":"ISO_8859_13","qualname":"::ISO_8859_13","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-13 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1328},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":55816,"byte_end":55832,"line_start":1065,"line_end":1065,"column_start":12,"column_end":28},"name":"ISO_8859_14_INIT","qualname":"::ISO_8859_14_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-8859-14](static.ISO_8859_14.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1330},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":56626,"byte_end":56637,"line_start":1085,"line_end":1085,"column_start":12,"column_end":23},"name":"ISO_8859_14","qualname":"::ISO_8859_14","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-14 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1332},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":57281,"byte_end":57297,"line_start":1099,"line_end":1099,"column_start":12,"column_end":28},"name":"ISO_8859_15_INIT","qualname":"::ISO_8859_15_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-8859-15](static.ISO_8859_15.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1334},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":58050,"byte_end":58061,"line_start":1118,"line_end":1118,"column_start":12,"column_end":23},"name":"ISO_8859_15","qualname":"::ISO_8859_15","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-15 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1336},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":58705,"byte_end":58721,"line_start":1132,"line_end":1132,"column_start":12,"column_end":28},"name":"ISO_8859_16_INIT","qualname":"::ISO_8859_16_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-8859-16](static.ISO_8859_16.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1338},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":59531,"byte_end":59542,"line_start":1152,"line_end":1152,"column_start":12,"column_end":23},"name":"ISO_8859_16","qualname":"::ISO_8859_16","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-16 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1340},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":60184,"byte_end":60199,"line_start":1166,"line_end":1166,"column_start":12,"column_end":27},"name":"ISO_8859_2_INIT","qualname":"::ISO_8859_2_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-8859-2](static.ISO_8859_2.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1342},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":60934,"byte_end":60944,"line_start":1184,"line_end":1184,"column_start":12,"column_end":22},"name":"ISO_8859_2","qualname":"::ISO_8859_2","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-2 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1344},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":61585,"byte_end":61600,"line_start":1198,"line_end":1198,"column_start":12,"column_end":27},"name":"ISO_8859_3_INIT","qualname":"::ISO_8859_3_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-8859-3](static.ISO_8859_3.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1346},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":62333,"byte_end":62343,"line_start":1216,"line_end":1216,"column_start":12,"column_end":22},"name":"ISO_8859_3","qualname":"::ISO_8859_3","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-3 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1348},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":62984,"byte_end":62999,"line_start":1230,"line_end":1230,"column_start":12,"column_end":27},"name":"ISO_8859_4_INIT","qualname":"::ISO_8859_4_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-8859-4](static.ISO_8859_4.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1350},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":63732,"byte_end":63742,"line_start":1248,"line_end":1248,"column_start":12,"column_end":22},"name":"ISO_8859_4","qualname":"::ISO_8859_4","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-4 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1352},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":64383,"byte_end":64398,"line_start":1262,"line_end":1262,"column_start":12,"column_end":27},"name":"ISO_8859_5_INIT","qualname":"::ISO_8859_5_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-8859-5](static.ISO_8859_5.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1354},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":65086,"byte_end":65096,"line_start":1280,"line_end":1280,"column_start":12,"column_end":22},"name":"ISO_8859_5","qualname":"::ISO_8859_5","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-5 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1356},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":65737,"byte_end":65752,"line_start":1294,"line_end":1294,"column_start":12,"column_end":27},"name":"ISO_8859_6_INIT","qualname":"::ISO_8859_6_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-8859-6](static.ISO_8859_6.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1358},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":66524,"byte_end":66534,"line_start":1313,"line_end":1313,"column_start":12,"column_end":22},"name":"ISO_8859_6","qualname":"::ISO_8859_6","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-6 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1360},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":67175,"byte_end":67190,"line_start":1327,"line_end":1327,"column_start":12,"column_end":27},"name":"ISO_8859_7_INIT","qualname":"::ISO_8859_7_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-8859-7](static.ISO_8859_7.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1362},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":68276,"byte_end":68286,"line_start":1350,"line_end":1350,"column_start":12,"column_end":22},"name":"ISO_8859_7","qualname":"::ISO_8859_7","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-7 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1364},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":68927,"byte_end":68942,"line_start":1364,"line_end":1364,"column_start":12,"column_end":27},"name":"ISO_8859_8_INIT","qualname":"::ISO_8859_8_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-8859-8](static.ISO_8859_8.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1366},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":69845,"byte_end":69855,"line_start":1385,"line_end":1385,"column_start":12,"column_end":22},"name":"ISO_8859_8","qualname":"::ISO_8859_8","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-8 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1368},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":70500,"byte_end":70517,"line_start":1399,"line_end":1399,"column_start":12,"column_end":29},"name":"ISO_8859_8_I_INIT","qualname":"::ISO_8859_8_I_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-8859-8-I](static.ISO_8859_8_I.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1370},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":71425,"byte_end":71437,"line_start":1420,"line_end":1420,"column_start":12,"column_end":24},"name":"ISO_8859_8_I","qualname":"::ISO_8859_8_I","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-8-I encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1372},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":72072,"byte_end":72083,"line_start":1434,"line_end":1434,"column_start":12,"column_end":23},"name":"KOI8_R_INIT","qualname":"::KOI8_R_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [KOI8-R](static.KOI8_R.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1374},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":72773,"byte_end":72779,"line_start":1452,"line_end":1452,"column_start":12,"column_end":18},"name":"KOI8_R","qualname":"::KOI8_R","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The KOI8-R encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1376},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":73408,"byte_end":73419,"line_start":1466,"line_end":1466,"column_start":12,"column_end":23},"name":"KOI8_U_INIT","qualname":"::KOI8_U_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [KOI8-U](static.KOI8_U.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1378},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":74078,"byte_end":74084,"line_start":1484,"line_end":1484,"column_start":12,"column_end":18},"name":"KOI8_U","qualname":"::KOI8_U","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The KOI8-U encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1380},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":74719,"byte_end":74733,"line_start":1498,"line_end":1498,"column_start":12,"column_end":26},"name":"SHIFT_JIS_INIT","qualname":"::SHIFT_JIS_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [Shift_JIS](static.SHIFT_JIS.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1382},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":75543,"byte_end":75552,"line_start":1518,"line_end":1518,"column_start":12,"column_end":21},"name":"SHIFT_JIS","qualname":"::SHIFT_JIS","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The Shift_JIS encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1384},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":76188,"byte_end":76201,"line_start":1532,"line_end":1532,"column_start":12,"column_end":25},"name":"UTF_16BE_INIT","qualname":"::UTF_16BE_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [UTF-16BE](static.UTF_16BE.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1386},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":76933,"byte_end":76941,"line_start":1552,"line_end":1552,"column_start":12,"column_end":20},"name":"UTF_16BE","qualname":"::UTF_16BE","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The UTF-16BE encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1388},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":77576,"byte_end":77589,"line_start":1566,"line_end":1566,"column_start":12,"column_end":25},"name":"UTF_16LE_INIT","qualname":"::UTF_16LE_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [UTF-16LE](static.UTF_16LE.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1390},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":78324,"byte_end":78332,"line_start":1586,"line_end":1586,"column_start":12,"column_end":20},"name":"UTF_16LE","qualname":"::UTF_16LE","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The UTF-16LE encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1392},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":78961,"byte_end":78971,"line_start":1600,"line_end":1600,"column_start":12,"column_end":22},"name":"UTF_8_INIT","qualname":"::UTF_8_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [UTF-8](static.UTF_8.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1394},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":79555,"byte_end":79560,"line_start":1617,"line_end":1617,"column_start":12,"column_end":17},"name":"UTF_8","qualname":"::UTF_8","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The UTF-8 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1396},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":80190,"byte_end":80202,"line_start":1631,"line_end":1631,"column_start":12,"column_end":24},"name":"GB18030_INIT","qualname":"::GB18030_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [gb18030](static.GB18030.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1398},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":81056,"byte_end":81063,"line_start":1652,"line_end":1652,"column_start":12,"column_end":19},"name":"GB18030","qualname":"::GB18030","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The gb18030 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1400},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":81699,"byte_end":81713,"line_start":1666,"line_end":1666,"column_start":12,"column_end":26},"name":"MACINTOSH_INIT","qualname":"::MACINTOSH_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [macintosh](static.MACINTOSH.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1402},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":82481,"byte_end":82490,"line_start":1685,"line_end":1685,"column_start":12,"column_end":21},"name":"MACINTOSH","qualname":"::MACINTOSH","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The macintosh encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1404},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":83132,"byte_end":83148,"line_start":1699,"line_end":1699,"column_start":12,"column_end":28},"name":"REPLACEMENT_INIT","qualname":"::REPLACEMENT_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [replacement](static.REPLACEMENT.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1406},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":83989,"byte_end":84000,"line_start":1721,"line_end":1721,"column_start":12,"column_end":23},"name":"REPLACEMENT","qualname":"::REPLACEMENT","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The replacement encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1408},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":84646,"byte_end":84663,"line_start":1735,"line_end":1735,"column_start":12,"column_end":29},"name":"WINDOWS_1250_INIT","qualname":"::WINDOWS_1250_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [windows-1250](static.WINDOWS_1250.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1410},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":85347,"byte_end":85359,"line_start":1753,"line_end":1753,"column_start":12,"column_end":24},"name":"WINDOWS_1250","qualname":"::WINDOWS_1250","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The windows-1250 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1412},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":86006,"byte_end":86023,"line_start":1767,"line_end":1767,"column_start":12,"column_end":29},"name":"WINDOWS_1251_INIT","qualname":"::WINDOWS_1251_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [windows-1251](static.WINDOWS_1251.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1414},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":86700,"byte_end":86712,"line_start":1785,"line_end":1785,"column_start":12,"column_end":24},"name":"WINDOWS_1251","qualname":"::WINDOWS_1251","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The windows-1251 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1416},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":87359,"byte_end":87376,"line_start":1799,"line_end":1799,"column_start":12,"column_end":29},"name":"WINDOWS_1252_INIT","qualname":"::WINDOWS_1252_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [windows-1252](static.WINDOWS_1252.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1418},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":88117,"byte_end":88129,"line_start":1818,"line_end":1818,"column_start":12,"column_end":24},"name":"WINDOWS_1252","qualname":"::WINDOWS_1252","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The windows-1252 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1420},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":88776,"byte_end":88793,"line_start":1832,"line_end":1832,"column_start":12,"column_end":29},"name":"WINDOWS_1253_INIT","qualname":"::WINDOWS_1253_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [windows-1253](static.WINDOWS_1253.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1422},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":89640,"byte_end":89652,"line_start":1852,"line_end":1852,"column_start":12,"column_end":24},"name":"WINDOWS_1253","qualname":"::WINDOWS_1253","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The windows-1253 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1424},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":90299,"byte_end":90316,"line_start":1866,"line_end":1866,"column_start":12,"column_end":29},"name":"WINDOWS_1254_INIT","qualname":"::WINDOWS_1254_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [windows-1254](static.WINDOWS_1254.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1426},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":91057,"byte_end":91069,"line_start":1885,"line_end":1885,"column_start":12,"column_end":24},"name":"WINDOWS_1254","qualname":"::WINDOWS_1254","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The windows-1254 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1428},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":91716,"byte_end":91733,"line_start":1899,"line_end":1899,"column_start":12,"column_end":29},"name":"WINDOWS_1255_INIT","qualname":"::WINDOWS_1255_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [windows-1255](static.WINDOWS_1255.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1430},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":92567,"byte_end":92579,"line_start":1919,"line_end":1919,"column_start":12,"column_end":24},"name":"WINDOWS_1255","qualname":"::WINDOWS_1255","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The windows-1255 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1432},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":93226,"byte_end":93243,"line_start":1933,"line_end":1933,"column_start":12,"column_end":29},"name":"WINDOWS_1256_INIT","qualname":"::WINDOWS_1256_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [windows-1256](static.WINDOWS_1256.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1434},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":93918,"byte_end":93930,"line_start":1951,"line_end":1951,"column_start":12,"column_end":24},"name":"WINDOWS_1256","qualname":"::WINDOWS_1256","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The windows-1256 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1436},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":94577,"byte_end":94594,"line_start":1965,"line_end":1965,"column_start":12,"column_end":29},"name":"WINDOWS_1257_INIT","qualname":"::WINDOWS_1257_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [windows-1257](static.WINDOWS_1257.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1438},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":95354,"byte_end":95366,"line_start":1984,"line_end":1984,"column_start":12,"column_end":24},"name":"WINDOWS_1257","qualname":"::WINDOWS_1257","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The windows-1257 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1440},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":96013,"byte_end":96030,"line_start":1998,"line_end":1998,"column_start":12,"column_end":29},"name":"WINDOWS_1258_INIT","qualname":"::WINDOWS_1258_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [windows-1258](static.WINDOWS_1258.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1442},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":97092,"byte_end":97104,"line_start":2021,"line_end":2021,"column_start":12,"column_end":24},"name":"WINDOWS_1258","qualname":"::WINDOWS_1258","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The windows-1258 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1444},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":97749,"byte_end":97765,"line_start":2035,"line_end":2035,"column_start":12,"column_end":28},"name":"WINDOWS_874_INIT","qualname":"::WINDOWS_874_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [windows-874](static.WINDOWS_874.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1446},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":98563,"byte_end":98574,"line_start":2054,"line_end":2054,"column_start":12,"column_end":23},"name":"WINDOWS_874","qualname":"::WINDOWS_874","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The windows-874 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1448},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":99224,"byte_end":99243,"line_start":2068,"line_end":2068,"column_start":12,"column_end":31},"name":"X_MAC_CYRILLIC_INIT","qualname":"::X_MAC_CYRILLIC_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [x-mac-cyrillic](static.X_MAC_CYRILLIC.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1450},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":99943,"byte_end":99957,"line_start":2086,"line_end":2086,"column_start":12,"column_end":26},"name":"X_MAC_CYRILLIC","qualname":"::X_MAC_CYRILLIC","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The x-mac-cyrillic encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1452},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":100610,"byte_end":100629,"line_start":2100,"line_end":2100,"column_start":12,"column_end":31},"name":"X_USER_DEFINED_INIT","qualname":"::X_USER_DEFINED_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [x-user-defined](static.X_USER_DEFINED.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1454},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":101309,"byte_end":101323,"line_start":2118,"line_end":2118,"column_start":12,"column_end":26},"name":"X_USER_DEFINED","qualname":"::X_USER_DEFINED","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The x-user-defined encoding.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1460},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":113011,"byte_end":113019,"line_start":2628,"line_end":2628,"column_start":12,"column_end":20},"name":"Encoding","qualname":"::Encoding","value":"Encoding {  }","parent":null,"children":[{"krate":0,"index":765},{"krate":0,"index":767}],"decl_id":null,"docs":" An encoding as defined in the [Encoding Standard][1].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1464},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":114175,"byte_end":114184,"line_start":2655,"line_end":2655,"column_start":12,"column_end":21},"name":"for_label","qualname":"<Encoding>::for_label","value":"fn (label: &[u8]) -> Option<&'static Encoding>","parent":null,"children":[],"decl_id":null,"docs":" Implements the\n [_get an encoding_](https://encoding.spec.whatwg.org/#concept-encoding-get)\n algorithm.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1466},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":118886,"byte_end":118910,"line_start":2777,"line_end":2777,"column_start":12,"column_end":36},"name":"for_label_no_replacement","qualname":"<Encoding>::for_label_no_replacement","value":"fn (label: &[u8]) -> Option<&'static Encoding>","parent":null,"children":[],"decl_id":null,"docs":" This method behaves the same as `for_label()`, except when `for_label()`\n would return `Some(REPLACEMENT)`, this method returns `None` instead.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":118865,"byte_end":118874,"line_start":2776,"line_end":2776,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1468},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":119766,"byte_end":119773,"line_start":2802,"line_end":2802,"column_start":12,"column_end":19},"name":"for_bom","qualname":"<Encoding>::for_bom","value":"fn (buffer: &[u8]) -> Option<(&'static Encoding, usize)>","parent":null,"children":[],"decl_id":null,"docs":" Performs non-incremental BOM sniffing.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":119745,"byte_end":119754,"line_start":2801,"line_end":2801,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1470},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":120351,"byte_end":120355,"line_start":2821,"line_end":2821,"column_start":12,"column_end":16},"name":"name","qualname":"<Encoding>::name","value":"fn (&'static self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of this encoding.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":120330,"byte_end":120339,"line_start":2820,"line_end":2820,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1472},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":120624,"byte_end":120645,"line_start":2830,"line_end":2830,"column_start":12,"column_end":33},"name":"can_encode_everything","qualname":"<Encoding>::can_encode_everything","value":"fn (&'static self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the _output encoding_ of this encoding can encode every\n `char`. (Only true if the output encoding is UTF-8.)","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":120603,"byte_end":120612,"line_start":2829,"line_end":2829,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1474},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":120907,"byte_end":120926,"line_start":2839,"line_end":2839,"column_start":12,"column_end":31},"name":"is_ascii_compatible","qualname":"<Encoding>::is_ascii_compatible","value":"fn (&'static self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the bytes 0x00...0x7F map exclusively to the characters\n U+0000...U+007F and vice versa.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":120886,"byte_end":120895,"line_start":2838,"line_end":2838,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1476},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":121524,"byte_end":121538,"line_start":2853,"line_end":2853,"column_start":12,"column_end":26},"name":"is_single_byte","qualname":"<Encoding>::is_single_byte","value":"fn (&'static self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether this encoding maps one byte to one Basic Multilingual\n Plane code point (i.e. byte length equals decoded UTF-16 length) and\n vice versa (for mappable characters).","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":121503,"byte_end":121512,"line_start":2852,"line_end":2852,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1480},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":122095,"byte_end":122110,"line_start":2869,"line_end":2869,"column_start":12,"column_end":27},"name":"output_encoding","qualname":"<Encoding>::output_encoding","value":"fn (&'static self) -> &'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" Returns the _output encoding_ of this encoding. This is UTF-8 for\n UTF-16BE, UTF-16LE and replacement and the encoding itself otherwise.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":122074,"byte_end":122083,"line_start":2868,"line_end":2868,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1482},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":124071,"byte_end":124077,"line_start":2912,"line_end":2912,"column_start":12,"column_end":18},"name":"decode","qualname":"<Encoding>::decode","value":"fn <'a> (&'static self, bytes: &'a [u8]) -> (Cow<'a, str>, &'static Encoding, bool)","parent":null,"children":[],"decl_id":null,"docs":" Decode complete input to `Cow<'a, str>` _with BOM sniffing_ and with\n malformed sequences replaced with the REPLACEMENT CHARACTER when the\n entire input is available as a single buffer (i.e. the end of the\n buffer marks the end of the stream).","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":124050,"byte_end":124059,"line_start":2911,"line_end":2911,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1484},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":126166,"byte_end":126189,"line_start":2955,"line_end":2955,"column_start":12,"column_end":35},"name":"decode_with_bom_removal","qualname":"<Encoding>::decode_with_bom_removal","value":"fn <'a> (&'static self, bytes: &'a [u8]) -> (Cow<'a, str>, bool)","parent":null,"children":[],"decl_id":null,"docs":" Decode complete input to `Cow<'a, str>` _with BOM removal_ and with\n malformed sequences replaced with the REPLACEMENT CHARACTER when the\n entire input is available as a single buffer (i.e. the end of the\n buffer marks the end of the stream).","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":126145,"byte_end":126154,"line_start":2954,"line_end":2954,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1486},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":128343,"byte_end":128370,"line_start":3001,"line_end":3001,"column_start":12,"column_end":39},"name":"decode_without_bom_handling","qualname":"<Encoding>::decode_without_bom_handling","value":"fn <'a> (&'static self, bytes: &'a [u8]) -> (Cow<'a, str>, bool)","parent":null,"children":[],"decl_id":null,"docs":" Decode complete input to `Cow<'a, str>` _without BOM handling_ and\n with malformed sequences replaced with the REPLACEMENT CHARACTER when\n the entire input is available as a single buffer (i.e. the end of the\n buffer marks the end of the stream).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1488},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":132690,"byte_end":132741,"line_start":3096,"line_end":3096,"column_start":12,"column_end":63},"name":"decode_without_bom_handling_and_without_replacement","qualname":"<Encoding>::decode_without_bom_handling_and_without_replacement","value":"fn <'a> (&'static self, bytes: &'a [u8]) -> Option<Cow<'a, str>>","parent":null,"children":[],"decl_id":null,"docs":" Decode complete input to `Cow<'a, str>` _without BOM handling_ and\n _with malformed sequences treated as fatal_ when the entire input is\n available as a single buffer (i.e. the end of the buffer marks the end\n of the stream).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1490},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":136919,"byte_end":136925,"line_start":3191,"line_end":3191,"column_start":12,"column_end":18},"name":"encode","qualname":"<Encoding>::encode","value":"fn <'a> (&'static self, string: &'a str) -> (Cow<'a, [u8]>, &'static Encoding, bool)","parent":null,"children":[],"decl_id":null,"docs":" Encode complete input to `Cow<'a, [u8]>` with unmappable characters\n replaced with decimal numeric character references when the entire input\n is available as a single buffer (i.e. the end of the buffer marks the\n end of the stream).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1494},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":139674,"byte_end":139685,"line_start":3257,"line_end":3257,"column_start":12,"column_end":23},"name":"new_decoder","qualname":"<Encoding>::new_decoder","value":"fn (&'static self) -> Decoder","parent":null,"children":[],"decl_id":null,"docs":" Instantiates a new decoder for this encoding with BOM sniffing enabled.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":139653,"byte_end":139662,"line_start":3256,"line_end":3256,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1496},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":140264,"byte_end":140292,"line_start":3271,"line_end":3271,"column_start":12,"column_end":40},"name":"new_decoder_with_bom_removal","qualname":"<Encoding>::new_decoder_with_bom_removal","value":"fn (&'static self) -> Decoder","parent":null,"children":[],"decl_id":null,"docs":" Instantiates a new decoder for this encoding with BOM removal.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":140243,"byte_end":140252,"line_start":3270,"line_end":3270,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1498},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":140980,"byte_end":141012,"line_start":3287,"line_end":3287,"column_start":12,"column_end":44},"name":"new_decoder_without_bom_handling","qualname":"<Encoding>::new_decoder_without_bom_handling","value":"fn (&'static self) -> Decoder","parent":null,"children":[],"decl_id":null,"docs":" Instantiates a new decoder for this encoding with BOM handling disabled.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":140959,"byte_end":140968,"line_start":3286,"line_end":3286,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1500},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":141268,"byte_end":141279,"line_start":3295,"line_end":3295,"column_start":12,"column_end":23},"name":"new_encoder","qualname":"<Encoding>::new_encoder","value":"fn (&'static self) -> Encoder","parent":null,"children":[],"decl_id":null,"docs":" Instantiates a new encoder for the output encoding of this encoding.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":141247,"byte_end":141256,"line_start":3294,"line_end":3294,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1502},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":141852,"byte_end":141868,"line_start":3310,"line_end":3310,"column_start":12,"column_end":28},"name":"utf8_valid_up_to","qualname":"<Encoding>::utf8_valid_up_to","value":"fn (bytes: &[u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Validates UTF-8.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1504},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":142173,"byte_end":142190,"line_start":3320,"line_end":3320,"column_start":12,"column_end":29},"name":"ascii_valid_up_to","qualname":"<Encoding>::ascii_valid_up_to","value":"fn (bytes: &[u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Validates ASCII.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1506},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":142610,"byte_end":142639,"line_start":3332,"line_end":3332,"column_start":12,"column_end":41},"name":"iso_2022_jp_ascii_valid_up_to","qualname":"<Encoding>::iso_2022_jp_ascii_valid_up_to","value":"fn (bytes: &[u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Validates ISO-2022-JP ASCII-state data.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":855},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":146015,"byte_end":146025,"line_start":3454,"line_end":3454,"column_start":5,"column_end":15},"name":"InputEmpty","qualname":"::CoderResult::InputEmpty","value":"CoderResult::InputEmpty","parent":{"krate":0,"index":1800},"children":[],"decl_id":null,"docs":" The input was exhausted.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":857},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":146295,"byte_end":146305,"line_start":3461,"line_end":3461,"column_start":5,"column_end":15},"name":"OutputFull","qualname":"::CoderResult::OutputFull","value":"CoderResult::OutputFull","parent":{"krate":0,"index":1800},"children":[],"decl_id":null,"docs":" The converter cannot produce another unit of output, because the output\n buffer does not have enough space left.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1800},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":145746,"byte_end":145757,"line_start":3448,"line_end":3448,"column_start":10,"column_end":21},"name":"CoderResult","qualname":"::CoderResult","value":"CoderResult::{InputEmpty, OutputFull}","parent":null,"children":[{"krate":0,"index":855},{"krate":0,"index":857}],"decl_id":null,"docs":" Result of a (potentially partial) decode or encode operation with\n replacement.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":145693,"byte_end":145704,"line_start":3446,"line_end":3446,"column_start":1,"column_end":12}},{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":145737,"byte_end":146308,"line_start":3448,"line_end":3462,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":859},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":146698,"byte_end":146708,"line_start":3473,"line_end":3473,"column_start":5,"column_end":15},"name":"InputEmpty","qualname":"::DecoderResult::InputEmpty","value":"DecoderResult::InputEmpty","parent":{"krate":0,"index":1814},"children":[],"decl_id":null,"docs":" The input was exhausted.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":861},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":146974,"byte_end":146984,"line_start":3480,"line_end":3480,"column_start":5,"column_end":15},"name":"OutputFull","qualname":"::DecoderResult::OutputFull","value":"DecoderResult::OutputFull","parent":{"krate":0,"index":1814},"children":[],"decl_id":null,"docs":" The decoder cannot produce another unit of output, because the output\n buffer does not have enough space left.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":863},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":147892,"byte_end":147901,"line_start":3498,"line_end":3498,"column_start":5,"column_end":14},"name":"Malformed","qualname":"::DecoderResult::Malformed","value":"DecoderResult::Malformed(u8, u8)","parent":{"krate":0,"index":1814},"children":[],"decl_id":null,"docs":" The decoder encountered a malformed byte sequence.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1814},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":146439,"byte_end":146452,"line_start":3467,"line_end":3467,"column_start":10,"column_end":23},"name":"DecoderResult","qualname":"::DecoderResult","value":"DecoderResult::{InputEmpty, OutputFull, Malformed}","parent":null,"children":[{"krate":0,"index":859},{"krate":0,"index":861},{"krate":0,"index":863}],"decl_id":null,"docs":" Result of a (potentially partial) decode operation without replacement.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":146386,"byte_end":146397,"line_start":3465,"line_end":3465,"column_start":1,"column_end":12}},{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":146430,"byte_end":147958,"line_start":3467,"line_end":3499,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":1522},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":153133,"byte_end":153140,"line_start":3598,"line_end":3598,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::Decoder","value":"Decoder {  }","parent":null,"children":[{"krate":0,"index":785},{"krate":0,"index":787},{"krate":0,"index":789}],"decl_id":null,"docs":" A converter that decodes a byte stream into Unicode according to a\n character encoding in a streaming (incremental) manner.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1528},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":154325,"byte_end":154333,"line_start":3634,"line_end":3634,"column_start":12,"column_end":20},"name":"encoding","qualname":"<Decoder>::encoding","value":"fn (&self) -> &'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The `Encoding` this `Decoder` is for.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":154304,"byte_end":154313,"line_start":3633,"line_end":3633,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1530},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":154879,"byte_end":154901,"line_start":3647,"line_end":3647,"column_start":12,"column_end":34},"name":"max_utf8_buffer_length","qualname":"<Decoder>::max_utf8_buffer_length","value":"fn (&self, byte_length: usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Query the worst-case UTF-8 output size _with replacement_.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1532},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":159814,"byte_end":159856,"line_start":3737,"line_end":3737,"column_start":12,"column_end":54},"name":"max_utf8_buffer_length_without_replacement","qualname":"<Decoder>::max_utf8_buffer_length_without_replacement","value":"fn (&self, byte_length: usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Query the worst-case UTF-8 output size _without replacement_.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1534},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":164740,"byte_end":164754,"line_start":3830,"line_end":3830,"column_start":12,"column_end":26},"name":"decode_to_utf8","qualname":"<Decoder>::decode_to_utf8","value":"fn (&mut self, src: &[u8], dst: &mut [u8], last: bool) -> (CoderResult, usize, usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally decode a byte stream into UTF-8 with malformed sequences\n replaced with the REPLACEMENT CHARACTER.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1536},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":167140,"byte_end":167153,"line_start":3893,"line_end":3893,"column_start":12,"column_end":25},"name":"decode_to_str","qualname":"<Decoder>::decode_to_str","value":"fn (&mut self, src: &[u8], dst: &mut str, last: bool) -> (CoderResult, usize, usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally decode a byte stream into UTF-8 with malformed sequences\n replaced with the REPLACEMENT CHARACTER with type system signaling\n of UTF-8 validity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1538},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":168988,"byte_end":169004,"line_start":3937,"line_end":3937,"column_start":12,"column_end":28},"name":"decode_to_string","qualname":"<Decoder>::decode_to_string","value":"fn (&mut self, src: &[u8], dst: &mut String, last: bool) -> (CoderResult, usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally decode a byte stream into UTF-8 with malformed sequences\n replaced with the REPLACEMENT CHARACTER using a `String` receiver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1830},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":170023,"byte_end":170057,"line_start":3964,"line_end":3964,"column_start":29,"column_end":63},"name":"decode_to_utf8_without_replacement","qualname":"<Decoder>::decode_to_utf8_without_replacement","value":"fn (&mut self, src: &[u8], dst: &mut [u8], last: bool) -> (DecoderResult, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally decode a byte stream into UTF-8\n _without replacement_.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1540},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":170915,"byte_end":170948,"line_start":3983,"line_end":3983,"column_start":12,"column_end":45},"name":"decode_to_str_without_replacement","qualname":"<Decoder>::decode_to_str_without_replacement","value":"fn (&mut self, src: &[u8], dst: &mut str, last: bool) -> (DecoderResult, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally decode a byte stream into UTF-8 with type system signaling\n of UTF-8 validity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1542},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":172644,"byte_end":172680,"line_start":4025,"line_end":4025,"column_start":12,"column_end":48},"name":"decode_to_string_without_replacement","qualname":"<Decoder>::decode_to_string_without_replacement","value":"fn (&mut self, src: &[u8], dst: &mut String, last: bool) -> (DecoderResult, usize)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally decode a byte stream into UTF-8 using a `String` receiver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1544},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":173761,"byte_end":173784,"line_start":4055,"line_end":4055,"column_start":12,"column_end":35},"name":"max_utf16_buffer_length","qualname":"<Decoder>::max_utf16_buffer_length","value":"fn (&self, byte_length: usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Query the worst-case UTF-16 output size (with or without replacement).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1546},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":178295,"byte_end":178310,"line_start":4138,"line_end":4138,"column_start":12,"column_end":27},"name":"decode_to_utf16","qualname":"<Decoder>::decode_to_utf16","value":"fn (&mut self, src: &[u8], dst: &mut [u16], last: bool) -> (CoderResult, usize, usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally decode a byte stream into UTF-16 with malformed sequences\n replaced with the REPLACEMENT CHARACTER.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1840},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":180299,"byte_end":180334,"line_start":4192,"line_end":4192,"column_start":29,"column_end":64},"name":"decode_to_utf16_without_replacement","qualname":"<Decoder>::decode_to_utf16_without_replacement","value":"fn (&mut self, src: &[u8], dst: &mut [u16], last: bool) -> (DecoderResult, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally decode a byte stream into UTF-16\n _without replacement_.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":869},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":181087,"byte_end":181097,"line_start":4210,"line_end":4210,"column_start":5,"column_end":15},"name":"InputEmpty","qualname":"::EncoderResult::InputEmpty","value":"EncoderResult::InputEmpty","parent":{"krate":0,"index":1850},"children":[],"decl_id":null,"docs":" The input was exhausted.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":871},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":181363,"byte_end":181373,"line_start":4217,"line_end":4217,"column_start":5,"column_end":15},"name":"OutputFull","qualname":"::EncoderResult::OutputFull","value":"EncoderResult::OutputFull","parent":{"krate":0,"index":1850},"children":[],"decl_id":null,"docs":" The encoder cannot produce another unit of output, because the output\n buffer does not have enough space left.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":873},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":181616,"byte_end":181626,"line_start":4224,"line_end":4224,"column_start":5,"column_end":15},"name":"Unmappable","qualname":"::EncoderResult::Unmappable","value":"EncoderResult::Unmappable(char)","parent":{"krate":0,"index":1850},"children":[],"decl_id":null,"docs":" The encoder encountered an unmappable character.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1850},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":180828,"byte_end":180841,"line_start":4204,"line_end":4204,"column_start":10,"column_end":23},"name":"EncoderResult","qualname":"::EncoderResult","value":"EncoderResult::{InputEmpty, OutputFull, Unmappable}","parent":null,"children":[{"krate":0,"index":869},{"krate":0,"index":871},{"krate":0,"index":873}],"decl_id":null,"docs":" Result of a (potentially partial) encode operation without replacement.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":180775,"byte_end":180786,"line_start":4202,"line_end":4202,"column_start":1,"column_end":12}},{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":180819,"byte_end":181635,"line_start":4204,"line_end":4225,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":1552},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":188074,"byte_end":188081,"line_start":4343,"line_end":4343,"column_start":12,"column_end":19},"name":"Encoder","qualname":"::Encoder","value":"Encoder {  }","parent":null,"children":[{"krate":0,"index":791},{"krate":0,"index":793}],"decl_id":null,"docs":" A converter that encodes a Unicode stream into bytes according to a\n character encoding in a streaming (incremental) manner.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1558},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":188400,"byte_end":188408,"line_start":4358,"line_end":4358,"column_start":12,"column_end":20},"name":"encoding","qualname":"<Encoder>::encoding","value":"fn (&self) -> &'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The `Encoding` this `Encoder` is for.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":188379,"byte_end":188388,"line_start":4357,"line_end":4357,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1560},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":188611,"byte_end":188628,"line_start":4365,"line_end":4365,"column_start":12,"column_end":29},"name":"has_pending_state","qualname":"<Encoder>::has_pending_state","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this is an ISO-2022-JP encoder that's not in the\n ASCII state and `false` otherwise.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":188590,"byte_end":188599,"line_start":4364,"line_end":4364,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1562},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":189135,"byte_end":189180,"line_start":4378,"line_end":4378,"column_start":12,"column_end":57},"name":"max_buffer_length_from_utf8_if_no_unmappables","qualname":"<Encoder>::max_buffer_length_from_utf8_if_no_unmappables","value":"fn (&self, byte_length: usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Query the worst-case output size when encoding from UTF-8 with\n replacement.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1564},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":189889,"byte_end":189936,"line_start":4400,"line_end":4400,"column_start":12,"column_end":59},"name":"max_buffer_length_from_utf8_without_replacement","qualname":"<Encoder>::max_buffer_length_from_utf8_without_replacement","value":"fn (&self, byte_length: usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Query the worst-case output size when encoding from UTF-8 without\n replacement.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1566},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":190430,"byte_end":190446,"line_start":4415,"line_end":4415,"column_start":12,"column_end":28},"name":"encode_from_utf8","qualname":"<Encoder>::encode_from_utf8","value":"fn (&mut self, src: &str, dst: &mut [u8], last: bool) -> (CoderResult, usize, usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally encode into byte stream from UTF-8 with unmappable\n characters replaced with HTML (decimal) numeric character references.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1568},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":193669,"byte_end":193692,"line_start":4497,"line_end":4497,"column_start":12,"column_end":35},"name":"encode_from_utf8_to_vec","qualname":"<Encoder>::encode_from_utf8_to_vec","value":"fn (&mut self, src: &str, dst: &mut Vec<u8>, last: bool) -> (CoderResult, usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally encode into byte stream from UTF-8 with unmappable\n characters replaced with HTML (decimal) numeric character references.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1570},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":194421,"byte_end":194457,"line_start":4520,"line_end":4520,"column_start":12,"column_end":48},"name":"encode_from_utf8_without_replacement","qualname":"<Encoder>::encode_from_utf8_without_replacement","value":"fn (&mut self, src: &str, dst: &mut [u8], last: bool) -> (EncoderResult, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally encode into byte stream from UTF-8 _without replacement_.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1572},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":194893,"byte_end":194936,"line_start":4535,"line_end":4535,"column_start":12,"column_end":55},"name":"encode_from_utf8_to_vec_without_replacement","qualname":"<Encoder>::encode_from_utf8_to_vec_without_replacement","value":"fn (&mut self, src: &str, dst: &mut Vec<u8>, last: bool) -> (EncoderResult, usize)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally encode into byte stream from UTF-8 _without replacement_.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1574},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":195851,"byte_end":195897,"line_start":4561,"line_end":4561,"column_start":12,"column_end":58},"name":"max_buffer_length_from_utf16_if_no_unmappables","qualname":"<Encoder>::max_buffer_length_from_utf16_if_no_unmappables","value":"fn (&self, u16_length: usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Query the worst-case output size when encoding from UTF-16 with\n replacement.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1576},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":196605,"byte_end":196653,"line_start":4583,"line_end":4583,"column_start":12,"column_end":60},"name":"max_buffer_length_from_utf16_without_replacement","qualname":"<Encoder>::max_buffer_length_from_utf16_without_replacement","value":"fn (&self, u16_length: usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Query the worst-case output size when encoding from UTF-16 without\n replacement.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1578},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":197147,"byte_end":197164,"line_start":4598,"line_end":4598,"column_start":12,"column_end":29},"name":"encode_from_utf16","qualname":"<Encoder>::encode_from_utf16","value":"fn (&mut self, src: &[u16], dst: &mut [u8], last: bool) -> (CoderResult, usize, usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally encode into byte stream from UTF-16 with unmappable\n characters replaced with HTML (decimal) numeric character references.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1580},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":200742,"byte_end":200779,"line_start":4685,"line_end":4685,"column_start":12,"column_end":49},"name":"encode_from_utf16_without_replacement","qualname":"<Encoder>::encode_from_utf16_without_replacement","value":"fn (&mut self, src: &[u16], dst: &mut [u8], last: bool) -> (EncoderResult, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally encode into byte stream from UTF-16 _without replacement_.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,98,105,103,53,46,114,115],"byte_start":308121,"byte_end":308132,"line_start":21,"line_end":21,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":1608},{"krate":0,"index":1610}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,98,105,103,53,46,114,115],"byte_start":314020,"byte_end":314031,"line_start":165,"line_end":165,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":72},{"krate":0,"index":74},{"krate":0,"index":1612},{"krate":0,"index":1614}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,101,117,99,95,106,112,46,114,115],"byte_start":323152,"byte_end":323164,"line_start":25,"line_end":25,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,101,117,99,95,106,112,46,114,115],"byte_start":323653,"byte_end":323665,"line_start":48,"line_end":48,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":1616},{"krate":0,"index":1618}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,101,117,99,95,106,112,46,114,115],"byte_start":331684,"byte_end":331696,"line_start":249,"line_end":249,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":120},{"krate":0,"index":1620},{"krate":0,"index":1622}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,101,117,99,95,107,114,46,114,115],"byte_start":340490,"byte_end":340502,"line_start":22,"line_end":22,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":142},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":1624},{"krate":0,"index":1626}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,101,117,99,95,107,114,46,114,115],"byte_start":352094,"byte_end":352106,"line_start":289,"line_end":289,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":162},{"krate":0,"index":164},{"krate":0,"index":1628},{"krate":0,"index":1630}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,103,98,49,56,48,51,48,46,114,115],"byte_start":357746,"byte_end":357760,"line_start":25,"line_end":25,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,103,98,49,56,48,51,48,46,114,115],"byte_start":358311,"byte_end":358325,"line_start":51,"line_end":51,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":196},{"krate":0,"index":198},{"krate":0,"index":200},{"krate":0,"index":1632},{"krate":0,"index":1634}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,103,98,49,56,48,51,48,46,114,115],"byte_start":375074,"byte_end":375088,"line_start":436,"line_end":436,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":1636},{"krate":0,"index":1638}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,105,115,111,95,50,48,50,50,95,106,112,46,114,115],"byte_start":386924,"byte_end":386940,"line_start":36,"line_end":36,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":234},{"krate":0,"index":236},{"krate":0,"index":238},{"krate":0,"index":240},{"krate":0,"index":242},{"krate":0,"index":1648},{"krate":0,"index":1650}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,105,115,111,95,50,48,50,50,95,106,112,46,114,115],"byte_start":404611,"byte_end":404627,"line_start":467,"line_end":467,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":258},{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":1652},{"krate":0,"index":1654}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,114,101,112,108,97,99,101,109,101,110,116,46,114,115],"byte_start":431407,"byte_end":431425,"line_start":17,"line_end":17,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":276},{"krate":0,"index":278},{"krate":0,"index":280},{"krate":0,"index":282},{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,115,104,105,102,116,95,106,105,115,46,114,115],"byte_start":434721,"byte_end":434736,"line_start":22,"line_end":22,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":306},{"krate":0,"index":308},{"krate":0,"index":310},{"krate":0,"index":312},{"krate":0,"index":1656},{"krate":0,"index":1658}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,115,104,105,102,116,95,106,105,115,46,114,115],"byte_start":442725,"byte_end":442740,"line_start":201,"line_end":201,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":320},{"krate":0,"index":322},{"krate":0,"index":324},{"krate":0,"index":1660},{"krate":0,"index":1662}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,115,105,110,103,108,101,95,98,121,116,101,46,114,115],"byte_start":451489,"byte_end":451506,"line_start":20,"line_end":20,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":342},{"krate":0,"index":344},{"krate":0,"index":346},{"krate":0,"index":348},{"krate":0,"index":350},{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,115,105,110,103,108,101,95,98,121,116,101,46,114,115],"byte_start":462395,"byte_end":462412,"line_start":239,"line_end":239,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":358},{"krate":0,"index":360},{"krate":0,"index":362},{"krate":0,"index":364},{"krate":0,"index":1664},{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,117,116,102,95,49,54,46,114,115],"byte_start":483111,"byte_end":483123,"line_start":21,"line_end":21,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":380},{"krate":0,"index":382},{"krate":0,"index":384},{"krate":0,"index":386},{"krate":0,"index":388},{"krate":0,"index":1666},{"krate":0,"index":1668}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,117,116,102,95,56,46,114,115],"byte_start":520470,"byte_end":520481,"line_start":467,"line_end":467,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":420},{"krate":0,"index":422},{"krate":0,"index":424},{"krate":0,"index":426},{"krate":0,"index":428},{"krate":0,"index":1674},{"krate":0,"index":1676}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,117,116,102,95,56,46,114,115],"byte_start":534268,"byte_end":534279,"line_start":832,"line_end":832,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":438},{"krate":0,"index":440},{"krate":0,"index":442},{"krate":0,"index":444},{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,120,95,117,115,101,114,95,100,101,102,105,110,101,100,46,114,115],"byte_start":564909,"byte_end":564927,"line_start":29,"line_end":29,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":460},{"krate":0,"index":462},{"krate":0,"index":464},{"krate":0,"index":466},{"krate":0,"index":1678},{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,120,95,117,115,101,114,95,100,101,102,105,110,101,100,46,114,115],"byte_start":568408,"byte_end":568426,"line_start":148,"line_end":148,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":474},{"krate":0,"index":476},{"krate":0,"index":478},{"krate":0,"index":1680},{"krate":0,"index":1682}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3217367,"byte_end":3217376,"line_start":73,"line_end":73,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3217577,"byte_end":3217589,"line_start":83,"line_end":83,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":724}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3217849,"byte_end":3217866,"line_start":97,"line_end":97,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":728},{"krate":0,"index":730},{"krate":0,"index":732},{"krate":0,"index":734},{"krate":0,"index":736},{"krate":0,"index":738}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3226959,"byte_end":3226969,"line_start":366,"line_end":366,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":752},{"krate":0,"index":754},{"krate":0,"index":756},{"krate":0,"index":758},{"krate":0,"index":760}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3227792,"byte_end":3227806,"line_start":403,"line_end":403,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":766},{"krate":0,"index":768},{"krate":0,"index":770}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3228383,"byte_end":3228399,"line_start":430,"line_end":430,"column_start":14,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":776},{"krate":0,"index":778},{"krate":0,"index":780},{"krate":0,"index":782}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3228992,"byte_end":3229006,"line_start":461,"line_end":461,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":788},{"krate":0,"index":790},{"krate":0,"index":792},{"krate":0,"index":794},{"krate":0,"index":796},{"krate":0,"index":798},{"krate":0,"index":800},{"krate":0,"index":802}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3230291,"byte_end":3230308,"line_start":511,"line_end":511,"column_start":14,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":808},{"krate":0,"index":810},{"krate":0,"index":812},{"krate":0,"index":814},{"krate":0,"index":816},{"krate":0,"index":818},{"krate":0,"index":820},{"krate":0,"index":822},{"krate":0,"index":824},{"krate":0,"index":826}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3232013,"byte_end":3232029,"line_start":573,"line_end":573,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":832},{"krate":0,"index":834},{"krate":0,"index":836},{"krate":0,"index":838},{"krate":0,"index":840},{"krate":0,"index":842},{"krate":0,"index":844},{"krate":0,"index":846},{"krate":0,"index":848},{"krate":0,"index":850},{"krate":0,"index":852},{"krate":0,"index":854},{"krate":0,"index":856},{"krate":0,"index":858},{"krate":0,"index":860},{"krate":0,"index":862},{"krate":0,"index":864}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3240233,"byte_end":3240246,"line_start":794,"line_end":794,"column_start":14,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":870},{"krate":0,"index":872},{"krate":0,"index":874},{"krate":0,"index":876},{"krate":0,"index":878},{"krate":0,"index":880},{"krate":0,"index":882},{"krate":0,"index":884}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3241520,"byte_end":3241536,"line_start":844,"line_end":844,"column_start":14,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":890},{"krate":0,"index":892},{"krate":0,"index":894},{"krate":0,"index":896},{"krate":0,"index":898},{"krate":0,"index":900},{"krate":0,"index":902},{"krate":0,"index":904},{"krate":0,"index":906},{"krate":0,"index":908}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3243228,"byte_end":3243243,"line_start":906,"line_end":906,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":914},{"krate":0,"index":916},{"krate":0,"index":918},{"krate":0,"index":920},{"krate":0,"index":922},{"krate":0,"index":924},{"krate":0,"index":926},{"krate":0,"index":928},{"krate":0,"index":930},{"krate":0,"index":932},{"krate":0,"index":934},{"krate":0,"index":936},{"krate":0,"index":938},{"krate":0,"index":940},{"krate":0,"index":942},{"krate":0,"index":944},{"krate":0,"index":946}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3251666,"byte_end":3251677,"line_start":1132,"line_end":1132,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":952},{"krate":0,"index":954},{"krate":0,"index":956},{"krate":0,"index":958},{"krate":0,"index":960},{"krate":0,"index":962},{"krate":0,"index":964},{"krate":0,"index":966}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3262940,"byte_end":3262955,"line_start":1378,"line_end":1378,"column_start":14,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":972},{"krate":0,"index":974},{"krate":0,"index":976},{"krate":0,"index":978}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3263783,"byte_end":3263800,"line_start":1411,"line_end":1411,"column_start":14,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":984},{"krate":0,"index":986},{"krate":0,"index":988},{"krate":0,"index":990}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3264378,"byte_end":3264388,"line_start":1441,"line_end":1441,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":996},{"krate":0,"index":998},{"krate":0,"index":1000},{"krate":0,"index":1002},{"krate":0,"index":1004},{"krate":0,"index":1006},{"krate":0,"index":1008},{"krate":0,"index":1010},{"krate":0,"index":1012}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3275590,"byte_end":3275604,"line_start":1698,"line_end":1698,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1018},{"krate":0,"index":1020},{"krate":0,"index":1022},{"krate":0,"index":1024}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3276423,"byte_end":3276439,"line_start":1731,"line_end":1731,"column_start":14,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1030},{"krate":0,"index":1032},{"krate":0,"index":1034},{"krate":0,"index":1036}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3277028,"byte_end":3277041,"line_start":1762,"line_end":1762,"column_start":14,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1042},{"krate":0,"index":1044},{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3277563,"byte_end":3277576,"line_start":1788,"line_end":1788,"column_start":14,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1052},{"krate":0,"index":1054},{"krate":0,"index":1056},{"krate":0,"index":1058}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3278273,"byte_end":3278288,"line_start":1819,"line_end":1819,"column_start":14,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1064},{"krate":0,"index":1066},{"krate":0,"index":1068},{"krate":0,"index":1070},{"krate":0,"index":1072},{"krate":0,"index":1074}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3279381,"byte_end":3279395,"line_start":1860,"line_end":1860,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1080},{"krate":0,"index":1082},{"krate":0,"index":1084},{"krate":0,"index":1086},{"krate":0,"index":1088}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3280330,"byte_end":3280345,"line_start":1900,"line_end":1900,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1094},{"krate":0,"index":1096},{"krate":0,"index":1098},{"krate":0,"index":1100},{"krate":0,"index":1102},{"krate":0,"index":1104},{"krate":0,"index":1106},{"krate":0,"index":1108},{"krate":0,"index":1110},{"krate":0,"index":1112}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,118,97,114,105,97,110,116,46,114,115],"byte_start":3284120,"byte_end":3284134,"line_start":49,"line_end":49,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1144},{"krate":0,"index":1146},{"krate":0,"index":1148},{"krate":0,"index":1150},{"krate":0,"index":1152}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,118,97,114,105,97,110,116,46,114,115],"byte_start":3290536,"byte_end":3290550,"line_start":175,"line_end":175,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1158},{"krate":0,"index":1160},{"krate":0,"index":1162},{"krate":0,"index":1164},{"krate":0,"index":1166}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,118,97,114,105,97,110,116,46,114,115],"byte_start":3295866,"byte_end":3295881,"line_start":307,"line_end":307,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1172},{"krate":0,"index":1174},{"krate":0,"index":1176}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":113084,"byte_end":113092,"line_start":2633,"line_end":2633,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1464},{"krate":0,"index":1466},{"krate":0,"index":1468},{"krate":0,"index":1470},{"krate":0,"index":1472},{"krate":0,"index":1474},{"krate":0,"index":1476},{"krate":0,"index":1478},{"krate":0,"index":1480},{"krate":0,"index":1482},{"krate":0,"index":1484},{"krate":0,"index":1486},{"krate":0,"index":1488},{"krate":0,"index":1490},{"krate":0,"index":1492},{"krate":0,"index":1494},{"krate":0,"index":1496},{"krate":0,"index":1498},{"krate":0,"index":1500},{"krate":0,"index":1502},{"krate":0,"index":1504},{"krate":0,"index":1506}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":142738,"byte_end":142746,"line_start":3337,"line_end":3337,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1510}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":142893,"byte_end":142901,"line_start":3344,"line_end":3344,"column_start":13,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":142920,"byte_end":142928,"line_start":3346,"line_end":3346,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1516}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":143073,"byte_end":143081,"line_start":3353,"line_end":3353,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1520}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":153247,"byte_end":153254,"line_start":3604,"line_end":3604,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1526},{"krate":0,"index":1528},{"krate":0,"index":1530},{"krate":0,"index":1532},{"krate":0,"index":1534},{"krate":0,"index":1536},{"krate":0,"index":1538},{"krate":0,"index":1830},{"krate":0,"index":1832},{"krate":0,"index":1834},{"krate":0,"index":1836},{"krate":0,"index":1838},{"krate":0,"index":1540},{"krate":0,"index":1542},{"krate":0,"index":1544},{"krate":0,"index":1546},{"krate":0,"index":1840},{"krate":0,"index":1842},{"krate":0,"index":1844},{"krate":0,"index":1846},{"krate":0,"index":1848}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":181642,"byte_end":181655,"line_start":4227,"line_end":4227,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1550}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":188154,"byte_end":188161,"line_start":4348,"line_end":4348,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1556},{"krate":0,"index":1558},{"krate":0,"index":1560},{"krate":0,"index":1562},{"krate":0,"index":1564},{"krate":0,"index":1566},{"krate":0,"index":1568},{"krate":0,"index":1570},{"krate":0,"index":1572},{"krate":0,"index":1574},{"krate":0,"index":1576},{"krate":0,"index":1578},{"krate":0,"index":1580}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":41444,"byte_end":41447,"line_start":728,"line_end":728,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1178}}],"macro_refs":[],"relations":[{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,98,105,103,53,46,114,115],"byte_start":308121,"byte_end":308132,"line_start":21,"line_end":21,"column_start":6,"column_end":17},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":52},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,98,105,103,53,46,114,115],"byte_start":314020,"byte_end":314031,"line_start":165,"line_end":165,"column_start":6,"column_end":17},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":66},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,101,117,99,95,106,112,46,114,115],"byte_start":323152,"byte_end":323164,"line_start":25,"line_end":25,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":88},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,101,117,99,95,106,112,46,114,115],"byte_start":323653,"byte_end":323665,"line_start":48,"line_end":48,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":96},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,101,117,99,95,106,112,46,114,115],"byte_start":331684,"byte_end":331696,"line_start":249,"line_end":249,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,101,117,99,95,107,114,46,114,115],"byte_start":340490,"byte_end":340502,"line_start":22,"line_end":22,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":136},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,101,117,99,95,107,114,46,114,115],"byte_start":352094,"byte_end":352106,"line_start":289,"line_end":289,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":156},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,103,98,49,56,48,51,48,46,114,115],"byte_start":357746,"byte_end":357760,"line_start":25,"line_end":25,"column_start":6,"column_end":20},"kind":{"variant":"Impl","fields":[7]},"from":{"krate":0,"index":180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,103,98,49,56,48,51,48,46,114,115],"byte_start":358311,"byte_end":358325,"line_start":51,"line_end":51,"column_start":6,"column_end":20},"kind":{"variant":"Impl","fields":[8]},"from":{"krate":0,"index":188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,103,98,49,56,48,51,48,46,114,115],"byte_start":375074,"byte_end":375088,"line_start":436,"line_end":436,"column_start":6,"column_end":20},"kind":{"variant":"Impl","fields":[9]},"from":{"krate":0,"index":206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,105,115,111,95,50,48,50,50,95,106,112,46,114,115],"byte_start":386924,"byte_end":386940,"line_start":36,"line_end":36,"column_start":6,"column_end":22},"kind":{"variant":"Impl","fields":[10]},"from":{"krate":0,"index":228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,105,115,111,95,50,48,50,50,95,106,112,46,114,115],"byte_start":404611,"byte_end":404627,"line_start":467,"line_end":467,"column_start":6,"column_end":22},"kind":{"variant":"Impl","fields":[11]},"from":{"krate":0,"index":252},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,114,101,112,108,97,99,101,109,101,110,116,46,114,115],"byte_start":431407,"byte_end":431425,"line_start":17,"line_end":17,"column_start":6,"column_end":24},"kind":{"variant":"Impl","fields":[12]},"from":{"krate":0,"index":270},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,115,104,105,102,116,95,106,105,115,46,114,115],"byte_start":434721,"byte_end":434736,"line_start":22,"line_end":22,"column_start":6,"column_end":21},"kind":{"variant":"Impl","fields":[13]},"from":{"krate":0,"index":300},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,115,104,105,102,116,95,106,105,115,46,114,115],"byte_start":442725,"byte_end":442740,"line_start":201,"line_end":201,"column_start":6,"column_end":21},"kind":{"variant":"Impl","fields":[14]},"from":{"krate":0,"index":316},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,115,105,110,103,108,101,95,98,121,116,101,46,114,115],"byte_start":451489,"byte_end":451506,"line_start":20,"line_end":20,"column_start":6,"column_end":23},"kind":{"variant":"Impl","fields":[15]},"from":{"krate":0,"index":338},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,115,105,110,103,108,101,95,98,121,116,101,46,114,115],"byte_start":462395,"byte_end":462412,"line_start":239,"line_end":239,"column_start":6,"column_end":23},"kind":{"variant":"Impl","fields":[16]},"from":{"krate":0,"index":354},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,117,116,102,95,49,54,46,114,115],"byte_start":483111,"byte_end":483123,"line_start":21,"line_end":21,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[17]},"from":{"krate":0,"index":376},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,117,116,102,95,56,46,114,115],"byte_start":520470,"byte_end":520481,"line_start":467,"line_end":467,"column_start":6,"column_end":17},"kind":{"variant":"Impl","fields":[18]},"from":{"krate":0,"index":414},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,117,116,102,95,56,46,114,115],"byte_start":534268,"byte_end":534279,"line_start":832,"line_end":832,"column_start":6,"column_end":17},"kind":{"variant":"Impl","fields":[19]},"from":{"krate":0,"index":434},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,120,95,117,115,101,114,95,100,101,102,105,110,101,100,46,114,115],"byte_start":564909,"byte_end":564927,"line_start":29,"line_end":29,"column_start":6,"column_end":24},"kind":{"variant":"Impl","fields":[20]},"from":{"krate":0,"index":456},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,120,95,117,115,101,114,95,100,101,102,105,110,101,100,46,114,115],"byte_start":568408,"byte_end":568426,"line_start":148,"line_end":148,"column_start":6,"column_end":24},"kind":{"variant":"Impl","fields":[21]},"from":{"krate":0,"index":470},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3217367,"byte_end":3217376,"line_start":73,"line_end":73,"column_start":17,"column_end":26},"kind":{"variant":"Impl","fields":[22]},"from":{"krate":0,"index":714},"to":{"krate":0,"index":710}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3217577,"byte_end":3217589,"line_start":83,"line_end":83,"column_start":17,"column_end":29},"kind":{"variant":"Impl","fields":[23]},"from":{"krate":0,"index":720},"to":{"krate":0,"index":710}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3217849,"byte_end":3217866,"line_start":97,"line_end":97,"column_start":6,"column_end":23},"kind":{"variant":"Impl","fields":[24]},"from":{"krate":0,"index":1728},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3226959,"byte_end":3226969,"line_start":366,"line_end":366,"column_start":10,"column_end":20},"kind":{"variant":"Impl","fields":[25]},"from":{"krate":0,"index":748},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3227792,"byte_end":3227806,"line_start":403,"line_end":403,"column_start":14,"column_end":28},"kind":{"variant":"Impl","fields":[26]},"from":{"krate":0,"index":762},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3228383,"byte_end":3228399,"line_start":430,"line_end":430,"column_start":14,"column_end":30},"kind":{"variant":"Impl","fields":[27]},"from":{"krate":0,"index":772},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3228992,"byte_end":3229006,"line_start":461,"line_end":461,"column_start":14,"column_end":28},"kind":{"variant":"Impl","fields":[28]},"from":{"krate":0,"index":784},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3230291,"byte_end":3230308,"line_start":511,"line_end":511,"column_start":14,"column_end":31},"kind":{"variant":"Impl","fields":[29]},"from":{"krate":0,"index":804},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3232013,"byte_end":3232029,"line_start":573,"line_end":573,"column_start":10,"column_end":26},"kind":{"variant":"Impl","fields":[30]},"from":{"krate":0,"index":828},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3240233,"byte_end":3240246,"line_start":794,"line_end":794,"column_start":14,"column_end":27},"kind":{"variant":"Impl","fields":[31]},"from":{"krate":0,"index":866},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3241520,"byte_end":3241536,"line_start":844,"line_end":844,"column_start":14,"column_end":30},"kind":{"variant":"Impl","fields":[32]},"from":{"krate":0,"index":886},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3243228,"byte_end":3243243,"line_start":906,"line_end":906,"column_start":10,"column_end":25},"kind":{"variant":"Impl","fields":[33]},"from":{"krate":0,"index":910},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3251666,"byte_end":3251677,"line_start":1132,"line_end":1132,"column_start":10,"column_end":21},"kind":{"variant":"Impl","fields":[34]},"from":{"krate":0,"index":948},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3262940,"byte_end":3262955,"line_start":1378,"line_end":1378,"column_start":14,"column_end":29},"kind":{"variant":"Impl","fields":[35]},"from":{"krate":0,"index":968},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3263783,"byte_end":3263800,"line_start":1411,"line_end":1411,"column_start":14,"column_end":31},"kind":{"variant":"Impl","fields":[36]},"from":{"krate":0,"index":980},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3264378,"byte_end":3264388,"line_start":1441,"line_end":1441,"column_start":10,"column_end":20},"kind":{"variant":"Impl","fields":[37]},"from":{"krate":0,"index":992},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3275590,"byte_end":3275604,"line_start":1698,"line_end":1698,"column_start":14,"column_end":28},"kind":{"variant":"Impl","fields":[38]},"from":{"krate":0,"index":1014},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3276423,"byte_end":3276439,"line_start":1731,"line_end":1731,"column_start":14,"column_end":30},"kind":{"variant":"Impl","fields":[39]},"from":{"krate":0,"index":1026},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3277028,"byte_end":3277041,"line_start":1762,"line_end":1762,"column_start":14,"column_end":27},"kind":{"variant":"Impl","fields":[40]},"from":{"krate":0,"index":1038},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3277563,"byte_end":3277576,"line_start":1788,"line_end":1788,"column_start":14,"column_end":27},"kind":{"variant":"Impl","fields":[41]},"from":{"krate":0,"index":1048},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3278273,"byte_end":3278288,"line_start":1819,"line_end":1819,"column_start":14,"column_end":29},"kind":{"variant":"Impl","fields":[42]},"from":{"krate":0,"index":1060},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3279381,"byte_end":3279395,"line_start":1860,"line_end":1860,"column_start":14,"column_end":28},"kind":{"variant":"Impl","fields":[43]},"from":{"krate":0,"index":1076},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":3280330,"byte_end":3280345,"line_start":1900,"line_end":1900,"column_start":10,"column_end":25},"kind":{"variant":"Impl","fields":[44]},"from":{"krate":0,"index":1090},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,118,97,114,105,97,110,116,46,114,115],"byte_start":3284120,"byte_end":3284134,"line_start":49,"line_end":49,"column_start":6,"column_end":20},"kind":{"variant":"Impl","fields":[45]},"from":{"krate":0,"index":1140},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,118,97,114,105,97,110,116,46,114,115],"byte_start":3290536,"byte_end":3290550,"line_start":175,"line_end":175,"column_start":6,"column_end":20},"kind":{"variant":"Impl","fields":[46]},"from":{"krate":0,"index":1154},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,118,97,114,105,97,110,116,46,114,115],"byte_start":3295866,"byte_end":3295881,"line_start":307,"line_end":307,"column_start":6,"column_end":21},"kind":{"variant":"Impl","fields":[47]},"from":{"krate":0,"index":1168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":113084,"byte_end":113092,"line_start":2633,"line_end":2633,"column_start":6,"column_end":14},"kind":{"variant":"Impl","fields":[48]},"from":{"krate":0,"index":1460},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":142738,"byte_end":142746,"line_start":3337,"line_end":3337,"column_start":20,"column_end":28},"kind":{"variant":"Impl","fields":[49]},"from":{"krate":0,"index":1460},"to":{"krate":2,"index":2410}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":142893,"byte_end":142901,"line_start":3344,"line_end":3344,"column_start":13,"column_end":21},"kind":{"variant":"Impl","fields":[50]},"from":{"krate":0,"index":1460},"to":{"krate":2,"index":2416}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":142920,"byte_end":142928,"line_start":3346,"line_end":3346,"column_start":15,"column_end":23},"kind":{"variant":"Impl","fields":[51]},"from":{"krate":0,"index":1460},"to":{"krate":2,"index":8002}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":143073,"byte_end":143081,"line_start":3353,"line_end":3353,"column_start":26,"column_end":34},"kind":{"variant":"Impl","fields":[52]},"from":{"krate":0,"index":1460},"to":{"krate":2,"index":8426}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":153247,"byte_end":153254,"line_start":3604,"line_end":3604,"column_start":6,"column_end":13},"kind":{"variant":"Impl","fields":[53]},"from":{"krate":0,"index":1522},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":181642,"byte_end":181655,"line_start":4227,"line_end":4227,"column_start":6,"column_end":19},"kind":{"variant":"Impl","fields":[54]},"from":{"krate":0,"index":1850},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,55,47,115,114,99,47,108,105,98,46,114,115],"byte_start":188154,"byte_end":188161,"line_start":4348,"line_end":4348,"column_start":6,"column_end":13},"kind":{"variant":"Impl","fields":[55]},"from":{"krate":0,"index":1552},"to":{"krate":4294967295,"index":4294967295}}]}