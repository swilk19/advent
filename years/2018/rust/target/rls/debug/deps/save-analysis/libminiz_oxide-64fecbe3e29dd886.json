{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.2","compilation":{"directory":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49],"program":"/Users/swilkins/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","miniz_oxide","/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.2.1/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=64fecbe3e29dd886","-C","extra-filename=-64fecbe3e29dd886","--out-dir","/Users/swilkins/projects/personal/advent/target/rls/debug/deps","-L","dependency=/Users/swilkins/projects/personal/advent/target/rls/debug/deps","--extern","adler32=/Users/swilkins/projects/personal/advent/target/rls/debug/deps/libadler32-e0add46da3871027.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/swilkins/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,112,114,111,106,101,99,116,115,47,112,101,114,115,111,110,97,108,47,97,100,118,101,110,116,47,116,97,114,103,101,116,47,114,108,115,47,100,101,98,117,103,47,100,101,112,115,47,108,105,98,109,105,110,105,122,95,111,120,105,100,101,45,54,52,102,101,99,98,101,51,101,50,57,100,100,56,56,54,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"miniz_oxide","disambiguator":[15721117931648135487,2372608070384678775]},"crate_root":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.2.1/src","external_crates":[{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.2.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[1174904389790056627,11980377943522478020]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.2.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[10276658452371951978,13955158368012629210]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.2.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6212298039852757345,13056973723602582898]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.2.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[2472034652193248465,17026985867558116202]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.2.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3739559732288738709,15577672448928610229]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.2.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[3280591782733940230,2391034779898666253]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.2.1/src/lib.rs","num":7,"id":{"name":"rustc_demangle","disambiguator":[17768744230194090356,6249204898376423079]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.2.1/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[18294290771476076947,9562268468698684298]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.2.1/src/lib.rs","num":9,"id":{"name":"backtrace_sys","disambiguator":[6239912042412093818,71364874345811638]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.2.1/src/lib.rs","num":10,"id":{"name":"panic_unwind","disambiguator":[17618422533075753481,12682123369635823587]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.2.1/src/lib.rs","num":11,"id":{"name":"adler32","disambiguator":[1874331840878029095,3425362567480822543]}}],"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":2084,"line_start":1,"line_end":83,"column_start":1,"column_end":47}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":534},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":855,"byte_end":869,"line_start":30,"line_end":30,"column_start":17,"column_end":31},"alias_span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":873,"byte_end":889,"line_start":30,"line_end":30,"column_start":35,"column_end":51},"name":"mz_adler32_oxide","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":530},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":907,"byte_end":922,"line_start":31,"line_end":31,"column_start":17,"column_end":32},"alias_span":null,"name":"MZ_ADLER32_INIT","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":2084,"line_start":1,"line_end":83,"column_start":1,"column_end":47},"name":"","qualname":"::","value":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.2.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":212},{"krate":0,"index":526},{"krate":0,"index":536},{"krate":0,"index":538},{"krate":0,"index":702},{"krate":0,"index":722},{"krate":0,"index":720},{"krate":0,"index":716},{"krate":0,"index":712},{"krate":0,"index":708},{"krate":0,"index":704},{"krate":0,"index":540},{"krate":0,"index":726},{"krate":0,"index":746},{"krate":0,"index":744},{"krate":0,"index":740},{"krate":0,"index":736},{"krate":0,"index":732},{"krate":0,"index":728},{"krate":0,"index":750},{"krate":0,"index":770},{"krate":0,"index":768},{"krate":0,"index":764},{"krate":0,"index":760},{"krate":0,"index":756},{"krate":0,"index":752},{"krate":0,"index":544}],"decl_id":null,"docs":" A pure rust replacement for the [miniz](https://github.com/richgel999/miniz)\n DEFLATE/zlib encoder/decoder.\n The plan for this crate is to be used as a back-end for the\n [flate2](https://github.com/alexcrichton/flate2-rs) crate and eventually remove the\n need to depend on a C library.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":8},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,105,110,102,108,97,116,101,47,109,111,100,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"inflate","qualname":"::inflate","value":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.2.1/src/inflate/mod.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":162},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":188},{"krate":0,"index":190},{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":196},{"krate":0,"index":198},{"krate":0,"index":574},{"krate":0,"index":594},{"krate":0,"index":592},{"krate":0,"index":588},{"krate":0,"index":584},{"krate":0,"index":580},{"krate":0,"index":576},{"krate":0,"index":200},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":210}],"decl_id":null,"docs":" This module contains functionality for decompression.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":18},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,105,110,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"core","qualname":"::inflate::core","value":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.2.1/src/inflate/core.rs","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":28},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":66},{"krate":0,"index":68},{"krate":0,"index":70},{"krate":0,"index":72},{"krate":0,"index":82},{"krate":0,"index":84},{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":90},{"krate":0,"index":546},{"krate":0,"index":564},{"krate":0,"index":560},{"krate":0,"index":556},{"krate":0,"index":552},{"krate":0,"index":548},{"krate":0,"index":102},{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":120},{"krate":0,"index":122},{"krate":0,"index":124},{"krate":0,"index":126},{"krate":0,"index":128},{"krate":0,"index":130},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":142},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":150},{"krate":0,"index":566},{"krate":0,"index":572},{"krate":0,"index":568},{"krate":0,"index":152},{"krate":0,"index":154},{"krate":0,"index":156},{"krate":0,"index":158},{"krate":0,"index":160}],"decl_id":null,"docs":" Streaming decompression functionality.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":38},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,105,110,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":6563,"byte_end":6581,"line_start":10,"line_end":10,"column_start":11,"column_end":29},"name":"TINFL_LZ_DICT_SIZE","qualname":"::inflate::core::TINFL_LZ_DICT_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":72},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,105,110,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":10207,"byte_end":10220,"line_start":106,"line_end":106,"column_start":9,"column_end":22},"name":"inflate_flags","qualname":"::inflate::core::inflate_flags","value":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.2.1/src/inflate/core.rs","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":76},{"krate":0,"index":78},{"krate":0,"index":80}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":74},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,105,110,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":10283,"byte_end":10311,"line_start":108,"line_end":108,"column_start":15,"column_end":43},"name":"TINFL_FLAG_PARSE_ZLIB_HEADER","qualname":"::inflate::core::inflate_flags::TINFL_FLAG_PARSE_ZLIB_HEADER","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Should we try to parse a zlib header?\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":76},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,105,110,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":10412,"byte_end":10437,"line_start":110,"line_end":110,"column_start":15,"column_end":40},"name":"TINFL_FLAG_HAS_MORE_INPUT","qualname":"::inflate::core::inflate_flags::TINFL_FLAG_HAS_MORE_INPUT","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" There is more input that hasn't been given to the decompressor yet.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":78},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,105,110,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":10512,"byte_end":10552,"line_start":112,"line_end":112,"column_start":15,"column_end":55},"name":"TINFL_FLAG_USING_NON_WRAPPING_OUTPUT_BUF","qualname":"::inflate::core::inflate_flags::TINFL_FLAG_USING_NON_WRAPPING_OUTPUT_BUF","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" The output buffer should not wrap around.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":80},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,105,110,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":10646,"byte_end":10672,"line_start":114,"line_end":114,"column_start":15,"column_end":41},"name":"TINFL_FLAG_COMPUTE_ADLER32","qualname":"::inflate::core::inflate_flags::TINFL_FLAG_COMPUTE_ADLER32","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Should we calculate the adler32 checksum of the output data?\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":88},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,105,110,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":11010,"byte_end":11027,"line_start":132,"line_end":132,"column_start":12,"column_end":29},"name":"DecompressorOxide","qualname":"::inflate::core::DecompressorOxide","value":"DecompressorOxide {  }","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":41},{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":53},{"krate":0,"index":55},{"krate":0,"index":57},{"krate":0,"index":59},{"krate":0,"index":61},{"krate":0,"index":65},{"krate":0,"index":67},{"krate":0,"index":69},{"krate":0,"index":73},{"krate":0,"index":77}],"decl_id":null,"docs":" Main decompression struct.","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,105,110,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":10968,"byte_end":10978,"line_start":130,"line_end":130,"column_start":1,"column_end":11}},{"value":"allow(bad_style)","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,105,110,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":10979,"byte_end":10998,"line_start":131,"line_end":131,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,105,110,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":12283,"byte_end":12286,"line_start":171,"line_end":171,"column_start":12,"column_end":15},"name":"new","qualname":"<DecompressorOxide>::new","value":"fn () -> DecompressorOxide","parent":null,"children":[],"decl_id":null,"docs":" Create a new tinfl_decompressor with all fields set to 0.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,105,110,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":12433,"byte_end":12440,"line_start":176,"line_end":176,"column_start":12,"column_end":19},"name":"default","qualname":"<DecompressorOxide>::default","value":"fn () -> DecompressorOxide","parent":null,"children":[],"decl_id":null,"docs":" Create a new tinfl_decompressor with all fields set to 0.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,105,110,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":13263,"byte_end":13267,"line_start":201,"line_end":201,"column_start":12,"column_end":16},"name":"init","qualname":"<DecompressorOxide>::init","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the current state to `Start`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,105,110,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":13242,"byte_end":13251,"line_start":200,"line_end":200,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,105,110,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":13521,"byte_end":13541,"line_start":209,"line_end":209,"column_start":19,"column_end":39},"name":"with_init_state_only","qualname":"<DecompressorOxide>::with_init_state_only","value":"fn () -> DecompressorOxide","parent":null,"children":[],"decl_id":null,"docs":" Create a new decompressor with only the state field initialized.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,105,110,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":13493,"byte_end":13502,"line_start":208,"line_end":208,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,105,110,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":13796,"byte_end":13803,"line_start":217,"line_end":217,"column_start":12,"column_end":19},"name":"adler32","qualname":"<DecompressorOxide>::adler32","value":"fn (&self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the adler32 checksum of the currently decompressed data.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,105,110,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":13775,"byte_end":13784,"line_start":216,"line_end":216,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":158},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,105,110,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":43034,"byte_end":43044,"line_start":1039,"line_end":1039,"column_start":8,"column_end":18},"name":"decompress","qualname":"::inflate::core::decompress","value":"fn (r: &mut DecompressorOxide, in_buf: &[u8], out_cur: &mut Cursor<&mut [u8]>, flags: u32) -> (TINFLStatus, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Main decompression function. Keeps decompressing data from `in_buf` until the in_buf is emtpy,\n out_cur is full, the end of the deflate stream is hit, or there is an error in the deflate\n stream.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":505},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,105,110,102,108,97,116,101,47,109,111,100,46,114,115],"byte_start":2804,"byte_end":2828,"line_start":24,"line_end":24,"column_start":5,"column_end":29},"name":"FailedCannotMakeProgress","qualname":"::inflate::TINFLStatus::FailedCannotMakeProgress","value":"TINFLStatus::FailedCannotMakeProgress","parent":{"krate":0,"index":574},"children":[],"decl_id":null,"docs":" More input data was expected, but the caller indicated that there was more data, so the\n input stream is likely truncated.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":509},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,105,110,102,108,97,116,101,47,109,111,100,46,114,115],"byte_start":2941,"byte_end":2949,"line_start":26,"line_end":26,"column_start":5,"column_end":13},"name":"BadParam","qualname":"::inflate::TINFLStatus::BadParam","value":"TINFLStatus::BadParam","parent":{"krate":0,"index":574},"children":[],"decl_id":null,"docs":" One or more of the input parameters were invalid.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":513},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,105,110,102,108,97,116,101,47,109,111,100,46,114,115],"byte_start":3102,"byte_end":3117,"line_start":29,"line_end":29,"column_start":5,"column_end":20},"name":"Adler32Mismatch","qualname":"::inflate::TINFLStatus::Adler32Mismatch","value":"TINFLStatus::Adler32Mismatch","parent":{"krate":0,"index":574},"children":[],"decl_id":null,"docs":" The decompression went fine, but the adler32 checksum did not match the one\n provided in the header.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":517},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,105,110,102,108,97,116,101,47,109,111,100,46,114,115],"byte_start":3211,"byte_end":3217,"line_start":31,"line_end":31,"column_start":5,"column_end":11},"name":"Failed","qualname":"::inflate::TINFLStatus::Failed","value":"TINFLStatus::Failed","parent":{"krate":0,"index":574},"children":[],"decl_id":null,"docs":" Failed to decompress due to invalid data.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":521},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,105,110,102,108,97,116,101,47,109,111,100,46,114,115],"byte_start":3297,"byte_end":3301,"line_start":33,"line_end":33,"column_start":5,"column_end":9},"name":"Done","qualname":"::inflate::TINFLStatus::Done","value":"TINFLStatus::Done","parent":{"krate":0,"index":574},"children":[],"decl_id":null,"docs":" Finished decomression without issues.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":525},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,105,110,102,108,97,116,101,47,109,111,100,46,114,115],"byte_start":3407,"byte_end":3421,"line_start":35,"line_end":35,"column_start":5,"column_end":19},"name":"NeedsMoreInput","qualname":"::inflate::TINFLStatus::NeedsMoreInput","value":"TINFLStatus::NeedsMoreInput","parent":{"krate":0,"index":574},"children":[],"decl_id":null,"docs":" The decompressor needs more input data to continue decompressing.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":529},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,105,110,102,108,97,116,101,47,109,111,100,46,114,115],"byte_start":3539,"byte_end":3552,"line_start":37,"line_end":37,"column_start":5,"column_end":18},"name":"HasMoreOutput","qualname":"::inflate::TINFLStatus::HasMoreOutput","value":"TINFLStatus::HasMoreOutput","parent":{"krate":0,"index":574},"children":[],"decl_id":null,"docs":" There is still pending data that didn't fit in the output buffer.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":574},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,105,110,102,108,97,116,101,47,109,111,100,46,114,115],"byte_start":2648,"byte_end":2659,"line_start":21,"line_end":21,"column_start":10,"column_end":21},"name":"TINFLStatus","qualname":"::inflate::TINFLStatus","value":"TINFLStatus::{FailedCannotMakeProgress, BadParam, Adler32Mismatch, Failed, Done, NeedsMoreInput, HasMoreOutput}","parent":null,"children":[{"krate":0,"index":505},{"krate":0,"index":509},{"krate":0,"index":513},{"krate":0,"index":517},{"krate":0,"index":521},{"krate":0,"index":525},{"krate":0,"index":529}],"decl_id":null,"docs":" Return status codes.\n","sig":null,"attributes":[{"value":"repr(i8)","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,105,110,102,108,97,116,101,47,109,111,100,46,114,115],"byte_start":2576,"byte_end":2587,"line_start":19,"line_end":19,"column_start":1,"column_end":12}},{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,105,110,102,108,97,116,101,47,109,111,100,46,114,115],"byte_start":2639,"byte_end":3592,"line_start":21,"line_end":38,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,105,110,102,108,97,116,101,47,109,111,100,46,114,115],"byte_start":2639,"byte_end":3592,"line_start":21,"line_end":38,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,105,110,102,108,97,116,101,47,109,111,100,46,114,115],"byte_start":3624,"byte_end":3632,"line_start":41,"line_end":41,"column_start":12,"column_end":20},"name":"from_i32","qualname":"<TINFLStatus>::from_i32","value":"fn (value: i32) -> Option<TINFLStatus>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":206},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,105,110,102,108,97,116,101,47,109,111,100,46,114,115],"byte_start":4380,"byte_end":4397,"line_start":60,"line_end":60,"column_start":8,"column_end":25},"name":"decompress_to_vec","qualname":"::inflate::decompress_to_vec","value":"fn (input: &[u8]) -> Result<Vec<u8>, TINFLStatus>","parent":null,"children":[],"decl_id":null,"docs":" Decompress the deflate-encoded data in `input` to a vector.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,105,110,102,108,97,116,101,47,109,111,100,46,114,115],"byte_start":4363,"byte_end":4372,"line_start":59,"line_end":59,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":208},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,105,110,102,108,97,116,101,47,109,111,100,46,114,115],"byte_start":4685,"byte_end":4707,"line_start":68,"line_end":68,"column_start":8,"column_end":30},"name":"decompress_to_vec_zlib","qualname":"::inflate::decompress_to_vec_zlib","value":"fn (input: &[u8]) -> Result<Vec<u8>, TINFLStatus>","parent":null,"children":[],"decl_id":null,"docs":" Decompress the deflate-encoded data (with a zlib wrapper) in `input` to a vector.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,105,110,102,108,97,116,101,47,109,111,100,46,114,115],"byte_start":4668,"byte_end":4677,"line_start":67,"line_end":67,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":212},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,109,111,100,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"deflate","qualname":"::deflate","value":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.2.1/src/deflate/mod.rs","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":494},{"krate":0,"index":518},{"krate":0,"index":678},{"krate":0,"index":698},{"krate":0,"index":696},{"krate":0,"index":692},{"krate":0,"index":688},{"krate":0,"index":684},{"krate":0,"index":680},{"krate":0,"index":520},{"krate":0,"index":522},{"krate":0,"index":524}],"decl_id":null,"docs":" This module contains functionality for compression.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":214},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"core","qualname":"::deflate::core","value":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.2.1/src/deflate/core.rs","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":224},{"krate":0,"index":236},{"krate":0,"index":238},{"krate":0,"index":240},{"krate":0,"index":242},{"krate":0,"index":250},{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":264},{"krate":0,"index":266},{"krate":0,"index":268},{"krate":0,"index":270},{"krate":0,"index":272},{"krate":0,"index":274},{"krate":0,"index":276},{"krate":0,"index":278},{"krate":0,"index":598},{"krate":0,"index":604},{"krate":0,"index":600},{"krate":0,"index":280},{"krate":0,"index":606},{"krate":0,"index":626},{"krate":0,"index":624},{"krate":0,"index":620},{"krate":0,"index":616},{"krate":0,"index":612},{"krate":0,"index":608},{"krate":0,"index":630},{"krate":0,"index":650},{"krate":0,"index":648},{"krate":0,"index":644},{"krate":0,"index":640},{"krate":0,"index":636},{"krate":0,"index":632},{"krate":0,"index":298},{"krate":0,"index":302},{"krate":0,"index":654},{"krate":0,"index":674},{"krate":0,"index":672},{"krate":0,"index":668},{"krate":0,"index":664},{"krate":0,"index":660},{"krate":0,"index":656},{"krate":0,"index":306},{"krate":0,"index":308},{"krate":0,"index":310},{"krate":0,"index":312},{"krate":0,"index":314},{"krate":0,"index":316},{"krate":0,"index":318},{"krate":0,"index":320},{"krate":0,"index":322},{"krate":0,"index":324},{"krate":0,"index":326},{"krate":0,"index":328},{"krate":0,"index":330},{"krate":0,"index":332},{"krate":0,"index":334},{"krate":0,"index":336},{"krate":0,"index":338},{"krate":0,"index":340},{"krate":0,"index":350},{"krate":0,"index":352},{"krate":0,"index":356},{"krate":0,"index":358},{"krate":0,"index":362},{"krate":0,"index":364},{"krate":0,"index":368},{"krate":0,"index":370},{"krate":0,"index":380},{"krate":0,"index":382},{"krate":0,"index":392},{"krate":0,"index":394},{"krate":0,"index":396},{"krate":0,"index":402},{"krate":0,"index":404},{"krate":0,"index":406},{"krate":0,"index":408},{"krate":0,"index":410},{"krate":0,"index":412},{"krate":0,"index":418},{"krate":0,"index":422},{"krate":0,"index":436},{"krate":0,"index":438},{"krate":0,"index":446},{"krate":0,"index":448},{"krate":0,"index":452},{"krate":0,"index":454},{"krate":0,"index":468},{"krate":0,"index":470},{"krate":0,"index":472},{"krate":0,"index":474},{"krate":0,"index":476},{"krate":0,"index":478},{"krate":0,"index":480},{"krate":0,"index":482},{"krate":0,"index":484},{"krate":0,"index":486},{"krate":0,"index":488},{"krate":0,"index":490},{"krate":0,"index":492}],"decl_id":null,"docs":" Streaming compression functionality.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":280},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":96968,"byte_end":96981,"line_start":158,"line_end":158,"column_start":9,"column_end":22},"name":"deflate_flags","qualname":"::deflate::core::deflate_flags","value":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/miniz_oxide-0.2.1/src/deflate/core.rs","parent":null,"children":[{"krate":0,"index":282},{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":290},{"krate":0,"index":292},{"krate":0,"index":294},{"krate":0,"index":296}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":282},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":97037,"byte_end":97060,"line_start":160,"line_end":160,"column_start":15,"column_end":38},"name":"TDEFL_WRITE_ZLIB_HEADER","qualname":"::deflate::core::deflate_flags::TDEFL_WRITE_ZLIB_HEADER","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Whether to use a zlib wrapper.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":284},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":97143,"byte_end":97164,"line_start":162,"line_end":162,"column_start":15,"column_end":36},"name":"TDEFL_COMPUTE_ADLER32","qualname":"::deflate::core::deflate_flags::TDEFL_COMPUTE_ADLER32","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Should we compute the adler32 checksum.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":286},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":97337,"byte_end":97362,"line_start":165,"line_end":165,"column_start":15,"column_end":40},"name":"TDEFL_GREEDY_PARSING_FLAG","qualname":"::deflate::core::deflate_flags::TDEFL_GREEDY_PARSING_FLAG","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Should we use greedy parsing (as opposed to lazy parsing where look ahead one or more\n bytes to check for better matches.)\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":288},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":97410,"byte_end":97445,"line_start":167,"line_end":167,"column_start":15,"column_end":50},"name":"TDEFL_NONDETERMINISTIC_PARSING_FLAG","qualname":"::deflate::core::deflate_flags::TDEFL_NONDETERMINISTIC_PARSING_FLAG","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" TODO\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":290},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":97532,"byte_end":97549,"line_start":169,"line_end":169,"column_start":15,"column_end":32},"name":"TDEFL_RLE_MATCHES","qualname":"::deflate::core::deflate_flags::TDEFL_RLE_MATCHES","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Only look for matches with a distance of 0.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":292},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":97641,"byte_end":97661,"line_start":171,"line_end":171,"column_start":15,"column_end":35},"name":"TDEFL_FILTER_MATCHES","qualname":"::deflate::core::deflate_flags::TDEFL_FILTER_MATCHES","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Only use matches that are at least 6 bytes long.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":294},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":97844,"byte_end":97873,"line_start":174,"line_end":174,"column_start":15,"column_end":44},"name":"TDEFL_FORCE_ALL_STATIC_BLOCKS","qualname":"::deflate::core::deflate_flags::TDEFL_FORCE_ALL_STATIC_BLOCKS","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Force the compressor to only output static blocks. (Blocks using the default huffman codes\n specified in the deflate specification.)\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":296},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":97977,"byte_end":98003,"line_start":176,"line_end":176,"column_start":15,"column_end":41},"name":"TDEFL_FORCE_ALL_RAW_BLOCKS","qualname":"::deflate::core::deflate_flags::TDEFL_FORCE_ALL_RAW_BLOCKS","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Force the compressor to only output raw/uncompressed blocks.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":539},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":98252,"byte_end":98259,"line_start":184,"line_end":184,"column_start":5,"column_end":12},"name":"Default","qualname":"::deflate::core::CompressionStrategy::Default","value":"CompressionStrategy::Default","parent":{"krate":0,"index":606},"children":[],"decl_id":null,"docs":" Don't use any of the special strategies.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":543},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":98326,"byte_end":98334,"line_start":186,"line_end":186,"column_start":5,"column_end":13},"name":"Filtered","qualname":"::deflate::core::CompressionStrategy::Filtered","value":"CompressionStrategy::Filtered","parent":{"krate":0,"index":606},"children":[],"decl_id":null,"docs":" Only use matches that are at least 5 bytes long.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":547},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":98410,"byte_end":98421,"line_start":188,"line_end":188,"column_start":5,"column_end":16},"name":"HuffmanOnly","qualname":"::deflate::core::CompressionStrategy::HuffmanOnly","value":"CompressionStrategy::HuffmanOnly","parent":{"krate":0,"index":606},"children":[],"decl_id":null,"docs":" Don't look for matches, only huffman encode the literals.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":551},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":98516,"byte_end":98519,"line_start":190,"line_end":190,"column_start":5,"column_end":8},"name":"RLE","qualname":"::deflate::core::CompressionStrategy::RLE","value":"CompressionStrategy::RLE","parent":{"krate":0,"index":606},"children":[],"decl_id":null,"docs":" Only look for matches with a distance of 1, i.e do run-length encoding only.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":555},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":98656,"byte_end":98661,"line_start":193,"line_end":193,"column_start":5,"column_end":10},"name":"Fixed","qualname":"::deflate::core::CompressionStrategy::Fixed","value":"CompressionStrategy::Fixed","parent":{"krate":0,"index":606},"children":[],"decl_id":null,"docs":" Only use static/fixed blocks. (Blocks using the default huffman codes\n specified in the deflate specification.)\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":606},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":98177,"byte_end":98196,"line_start":182,"line_end":182,"column_start":10,"column_end":29},"name":"CompressionStrategy","qualname":"::deflate::core::CompressionStrategy","value":"CompressionStrategy::{Default, Filtered, HuffmanOnly, RLE, Fixed}","parent":null,"children":[{"krate":0,"index":539},{"krate":0,"index":543},{"krate":0,"index":547},{"krate":0,"index":551},{"krate":0,"index":555}],"decl_id":null,"docs":" Used to generate deflate flags with `create_comp_flags_from_zip_params`.\n","sig":null,"attributes":[{"value":"repr(i32)","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":98104,"byte_end":98116,"line_start":180,"line_end":180,"column_start":1,"column_end":13}},{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":98168,"byte_end":98668,"line_start":182,"line_end":194,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":98168,"byte_end":98668,"line_start":182,"line_end":194,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":561},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":98795,"byte_end":98799,"line_start":200,"line_end":200,"column_start":5,"column_end":9},"name":"None","qualname":"::deflate::core::TDEFLFlush::None","value":"TDEFLFlush::None","parent":{"krate":0,"index":630},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":565},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":98809,"byte_end":98813,"line_start":201,"line_end":201,"column_start":5,"column_end":9},"name":"Sync","qualname":"::deflate::core::TDEFLFlush::Sync","value":"TDEFLFlush::Sync","parent":{"krate":0,"index":630},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":569},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":98823,"byte_end":98827,"line_start":202,"line_end":202,"column_start":5,"column_end":9},"name":"Full","qualname":"::deflate::core::TDEFLFlush::Full","value":"TDEFLFlush::Full","parent":{"krate":0,"index":630},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":573},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":98837,"byte_end":98843,"line_start":203,"line_end":203,"column_start":5,"column_end":11},"name":"Finish","qualname":"::deflate::core::TDEFLFlush::Finish","value":"TDEFLFlush::Finish","parent":{"krate":0,"index":630},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":630},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":98778,"byte_end":98788,"line_start":199,"line_end":199,"column_start":10,"column_end":20},"name":"TDEFLFlush","qualname":"::deflate::core::TDEFLFlush","value":"TDEFLFlush::{None, Sync, Full, Finish}","parent":null,"children":[{"krate":0,"index":561},{"krate":0,"index":565},{"krate":0,"index":569},{"krate":0,"index":573}],"decl_id":null,"docs":" A list of deflate flush types.\n","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":98705,"byte_end":98717,"line_start":197,"line_end":197,"column_start":1,"column_end":13}},{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":98769,"byte_end":98850,"line_start":199,"line_end":204,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":98769,"byte_end":98850,"line_start":199,"line_end":204,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":99251,"byte_end":99254,"line_start":219,"line_end":219,"column_start":12,"column_end":15},"name":"new","qualname":"<TDEFLFlush>::new","value":"fn (flush: i32) -> Result<Self, MZError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":579},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":99647,"byte_end":99655,"line_start":234,"line_end":234,"column_start":5,"column_end":13},"name":"BadParam","qualname":"::deflate::core::TDEFLStatus::BadParam","value":"TDEFLStatus::BadParam","parent":{"krate":0,"index":654},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":583},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":99666,"byte_end":99678,"line_start":235,"line_end":235,"column_start":5,"column_end":17},"name":"PutBufFailed","qualname":"::deflate::core::TDEFLStatus::PutBufFailed","value":"TDEFLStatus::PutBufFailed","parent":{"krate":0,"index":654},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":587},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":99689,"byte_end":99693,"line_start":236,"line_end":236,"column_start":5,"column_end":9},"name":"Okay","qualname":"::deflate::core::TDEFLStatus::Okay","value":"TDEFLStatus::Okay","parent":{"krate":0,"index":654},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":591},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":99703,"byte_end":99707,"line_start":237,"line_end":237,"column_start":5,"column_end":9},"name":"Done","qualname":"::deflate::core::TDEFLStatus::Done","value":"TDEFLStatus::Done","parent":{"krate":0,"index":654},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":654},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":99629,"byte_end":99640,"line_start":233,"line_end":233,"column_start":10,"column_end":21},"name":"TDEFLStatus","qualname":"::deflate::core::TDEFLStatus","value":"TDEFLStatus::{BadParam, PutBufFailed, Okay, Done}","parent":null,"children":[{"krate":0,"index":579},{"krate":0,"index":583},{"krate":0,"index":587},{"krate":0,"index":591}],"decl_id":null,"docs":" Return status codes.\n","sig":null,"attributes":[{"value":"repr(i32)","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":99556,"byte_end":99568,"line_start":231,"line_end":231,"column_start":1,"column_end":13}},{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":99620,"byte_end":99714,"line_start":233,"line_end":238,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":99620,"byte_end":99714,"line_start":233,"line_end":238,"column_start":1,"column_end":2}}]},{"kind":"Const","id":{"krate":0,"index":324},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":100531,"byte_end":100543,"line_start":260,"line_end":260,"column_start":11,"column_end":23},"name":"LZ_DICT_SIZE","qualname":"::deflate::core::LZ_DICT_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Size of the chained hash table.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":330},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":100780,"byte_end":100793,"line_start":266,"line_end":266,"column_start":11,"column_end":24},"name":"MAX_MATCH_LEN","qualname":"::deflate::core::MAX_MATCH_LEN","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The maximum length of a match.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":338},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":102437,"byte_end":102452,"line_start":327,"line_end":327,"column_start":12,"column_end":27},"name":"CompressorOxide","qualname":"::deflate::core::CompressorOxide","value":"CompressorOxide {  }","parent":null,"children":[{"krate":0,"index":151},{"krate":0,"index":153},{"krate":0,"index":155},{"krate":0,"index":157}],"decl_id":null,"docs":" Main compression struct.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":102584,"byte_end":102587,"line_start":335,"line_end":335,"column_start":12,"column_end":15},"name":"new","qualname":"<CompressorOxide>::new","value":"fn (flags: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":102929,"byte_end":102936,"line_start":346,"line_end":346,"column_start":12,"column_end":19},"name":"adler32","qualname":"<CompressorOxide>::adler32","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":102999,"byte_end":103017,"line_start":350,"line_end":350,"column_start":12,"column_end":30},"name":"prev_return_status","qualname":"<CompressorOxide>::prev_return_status","value":"fn (&self) -> TDEFLStatus","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":103099,"byte_end":103104,"line_start":354,"line_end":354,"column_start":12,"column_end":17},"name":"flags","qualname":"<CompressorOxide>::flags","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":350},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":103235,"byte_end":103247,"line_start":360,"line_end":360,"column_start":12,"column_end":24},"name":"CallbackFunc","qualname":"::deflate::core::CallbackFunc","value":"CallbackFunc { put_buf_func }","parent":null,"children":[{"krate":0,"index":161}],"decl_id":null,"docs":" Callback function and user used in `compress_to_output`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":161},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":103262,"byte_end":103274,"line_start":361,"line_end":361,"column_start":9,"column_end":21},"name":"put_buf_func","qualname":"::deflate::core::CallbackFunc::put_buf_func","value":"std::boxed::Box<(dyn for<'r> std::ops::FnMut(&'r [u8]) -> bool + 'a)>","parent":{"krate":0,"index":350},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":486},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":162126,"byte_end":162134,"line_start":2009,"line_end":2009,"column_start":8,"column_end":16},"name":"compress","qualname":"::deflate::core::compress","value":"fn (d: &mut CompressorOxide, in_buf: &[u8], out_buf: &mut [u8], flush: TDEFLFlush) -> (TDEFLStatus, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Main compression function. Puts output into buffer.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":488},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":162653,"byte_end":162671,"line_start":2026,"line_end":2026,"column_start":8,"column_end":26},"name":"compress_to_output","qualname":"::deflate::core::compress_to_output","value":"fn (d: &mut CompressorOxide, in_buf: &[u8], flush: TDEFLFlush, callback_func: impl FnMut(&[u8]) -> bool) -> (TDEFLStatus, usize)","parent":null,"children":[],"decl_id":null,"docs":" Main compression function. Callbacks output.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":492},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":166024,"byte_end":166057,"line_start":2129,"line_end":2129,"column_start":8,"column_end":41},"name":"create_comp_flags_from_zip_params","qualname":"::deflate::core::create_comp_flags_from_zip_params","value":"fn (level: i32, window_bits: i32, strategy: i32) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Create a set of compression flags using parameters used by zlib and other compressors.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":597},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,109,111,100,46,114,115],"byte_start":81887,"byte_end":81900,"line_start":14,"line_end":14,"column_start":5,"column_end":18},"name":"NoCompression","qualname":"::deflate::CompressionLevel::NoCompression","value":"CompressionLevel::NoCompression","parent":{"krate":0,"index":678},"children":[],"decl_id":null,"docs":" Don't do any compression, only output uncompressed blocks.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":601},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,109,111,100,46,114,115],"byte_start":82000,"byte_end":82009,"line_start":16,"line_end":16,"column_start":5,"column_end":14},"name":"BestSpeed","qualname":"::deflate::CompressionLevel::BestSpeed","value":"CompressionLevel::BestSpeed","parent":{"krate":0,"index":678},"children":[],"decl_id":null,"docs":" Fast compression. Uses a special compression routine that is optimized for speed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":605},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,109,111,100,46,114,115],"byte_start":82098,"byte_end":82113,"line_start":18,"line_end":18,"column_start":5,"column_end":20},"name":"BestCompression","qualname":"::deflate::CompressionLevel::BestCompression","value":"CompressionLevel::BestCompression","parent":{"krate":0,"index":678},"children":[],"decl_id":null,"docs":" Slow/high compression. Do a lot of checks to try to find good matches.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":609},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,109,111,100,46,114,115],"byte_start":82167,"byte_end":82182,"line_start":20,"line_end":20,"column_start":5,"column_end":20},"name":"UberCompression","qualname":"::deflate::CompressionLevel::UberCompression","value":"CompressionLevel::UberCompression","parent":{"krate":0,"index":678},"children":[],"decl_id":null,"docs":" Even more checks, can be very slow.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":613},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,109,111,100,46,114,115],"byte_start":82251,"byte_end":82263,"line_start":22,"line_end":22,"column_start":5,"column_end":17},"name":"DefaultLevel","qualname":"::deflate::CompressionLevel::DefaultLevel","value":"CompressionLevel::DefaultLevel","parent":{"krate":0,"index":678},"children":[],"decl_id":null,"docs":" Default compromise between speed and compression.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":617},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,109,111,100,46,114,115],"byte_start":82316,"byte_end":82334,"line_start":24,"line_end":24,"column_start":5,"column_end":23},"name":"DefaultCompression","qualname":"::deflate::CompressionLevel::DefaultCompression","value":"CompressionLevel::DefaultCompression","parent":{"krate":0,"index":678},"children":[],"decl_id":null,"docs":" Use the default compression level.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":678},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,109,111,100,46,114,115],"byte_start":81797,"byte_end":81813,"line_start":12,"line_end":12,"column_start":10,"column_end":26},"name":"CompressionLevel","qualname":"::deflate::CompressionLevel","value":"CompressionLevel::{NoCompression, BestSpeed, BestCompression, UberCompression, DefaultLevel, DefaultCompression}","parent":null,"children":[{"krate":0,"index":597},{"krate":0,"index":601},{"krate":0,"index":605},{"krate":0,"index":609},{"krate":0,"index":613},{"krate":0,"index":617}],"decl_id":null,"docs":" How much processing the compressor should do to compress the data.\n `NoCompression` and `Bestspeed` have special meanings, the other levels determine the number\n of checks for matches in the hash chains and whether to use lazy or greedy parsing.\n","sig":null,"attributes":[{"value":"repr(i32)","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,109,111,100,46,114,115],"byte_start":81724,"byte_end":81736,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,109,111,100,46,114,115],"byte_start":81788,"byte_end":82342,"line_start":12,"line_end":25,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,109,111,100,46,114,115],"byte_start":81788,"byte_end":82342,"line_start":12,"line_end":25,"column_start":1,"column_end":2}}]},{"kind":"Function","id":{"krate":0,"index":520},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,109,111,100,46,114,115],"byte_start":84430,"byte_end":84445,"line_start":107,"line_end":107,"column_start":8,"column_end":23},"name":"compress_to_vec","qualname":"::deflate::compress_to_vec","value":"fn (input: &[u8], level: u8) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Compress the input data to a vector, using the specified compression level (0-10).\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":522},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,109,111,100,46,114,115],"byte_start":84656,"byte_end":84676,"line_start":113,"line_end":113,"column_start":8,"column_end":28},"name":"compress_to_vec_zlib","qualname":"::deflate::compress_to_vec_zlib","value":"fn (input: &[u8], level: u8) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Compress the input data to a vector, using the specified compression level (0-10), and with a\n zlib wrapper.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":530},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,115,104,97,114,101,100,46,114,115],"byte_start":169551,"byte_end":169566,"line_start":3,"line_end":3,"column_start":11,"column_end":26},"name":"MZ_ADLER32_INIT","qualname":"::shared::MZ_ADLER32_INIT","value":"u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":534},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,115,104,97,114,101,100,46,114,115],"byte_start":169702,"byte_end":169716,"line_start":8,"line_end":8,"column_start":8,"column_end":22},"name":"update_adler32","qualname":"::shared::update_adler32","value":"fn (adler: u32, data: &[u8]) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":623},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1039,"byte_end":1043,"line_start":37,"line_end":37,"column_start":5,"column_end":9},"name":"None","qualname":"::MZFlush::None","value":"MZFlush::None","parent":{"krate":0,"index":702},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":627},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1053,"byte_end":1060,"line_start":38,"line_end":38,"column_start":5,"column_end":12},"name":"Partial","qualname":"::MZFlush::Partial","value":"MZFlush::Partial","parent":{"krate":0,"index":702},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":631},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1070,"byte_end":1074,"line_start":39,"line_end":39,"column_start":5,"column_end":9},"name":"Sync","qualname":"::MZFlush::Sync","value":"MZFlush::Sync","parent":{"krate":0,"index":702},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":635},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1084,"byte_end":1088,"line_start":40,"line_end":40,"column_start":5,"column_end":9},"name":"Full","qualname":"::MZFlush::Full","value":"MZFlush::Full","parent":{"krate":0,"index":702},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":639},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1098,"byte_end":1104,"line_start":41,"line_end":41,"column_start":5,"column_end":11},"name":"Finish","qualname":"::MZFlush::Finish","value":"MZFlush::Finish","parent":{"krate":0,"index":702},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":643},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1114,"byte_end":1119,"line_start":42,"line_end":42,"column_start":5,"column_end":10},"name":"Block","qualname":"::MZFlush::Block","value":"MZFlush::Block","parent":{"krate":0,"index":702},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":702},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1025,"byte_end":1032,"line_start":36,"line_end":36,"column_start":10,"column_end":17},"name":"MZFlush","qualname":"::MZFlush","value":"MZFlush::{None, Partial, Sync, Full, Finish, Block}","parent":null,"children":[{"krate":0,"index":623},{"krate":0,"index":627},{"krate":0,"index":631},{"krate":0,"index":635},{"krate":0,"index":639},{"krate":0,"index":643}],"decl_id":null,"docs":" A list of flush types.\n","sig":null,"attributes":[{"value":"repr(i32)","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":952,"byte_end":964,"line_start":34,"line_end":34,"column_start":1,"column_end":13}},{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1016,"byte_end":1126,"line_start":36,"line_end":43,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1016,"byte_end":1126,"line_start":36,"line_end":43,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1269,"byte_end":1272,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<MZFlush>::new","value":"fn (flush: i32) -> Result<Self, MZError>","parent":null,"children":[],"decl_id":null,"docs":" Create a Flush instance from an integer value.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":649},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1674,"byte_end":1676,"line_start":64,"line_end":64,"column_start":5,"column_end":7},"name":"Ok","qualname":"::MZStatus::Ok","value":"MZStatus::Ok","parent":{"krate":0,"index":726},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":653},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1686,"byte_end":1695,"line_start":65,"line_end":65,"column_start":5,"column_end":14},"name":"StreamEnd","qualname":"::MZStatus::StreamEnd","value":"MZStatus::StreamEnd","parent":{"krate":0,"index":726},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":657},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1705,"byte_end":1713,"line_start":66,"line_end":66,"column_start":5,"column_end":13},"name":"NeedDict","qualname":"::MZStatus::NeedDict","value":"MZStatus::NeedDict","parent":{"krate":0,"index":726},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":726},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1659,"byte_end":1667,"line_start":63,"line_end":63,"column_start":10,"column_end":18},"name":"MZStatus","qualname":"::MZStatus","value":"MZStatus::{Ok, StreamEnd, NeedDict}","parent":null,"children":[{"krate":0,"index":649},{"krate":0,"index":653},{"krate":0,"index":657}],"decl_id":null,"docs":" A list of miniz successful status codes.\n","sig":null,"attributes":[{"value":"repr(i32)","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1586,"byte_end":1598,"line_start":61,"line_end":61,"column_start":1,"column_end":13}},{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1650,"byte_end":1720,"line_start":63,"line_end":67,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1650,"byte_end":1720,"line_start":63,"line_end":67,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":663},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1850,"byte_end":1855,"line_start":73,"line_end":73,"column_start":5,"column_end":10},"name":"ErrNo","qualname":"::MZError::ErrNo","value":"MZError::ErrNo","parent":{"krate":0,"index":750},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":667},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1866,"byte_end":1872,"line_start":74,"line_end":74,"column_start":5,"column_end":11},"name":"Stream","qualname":"::MZError::Stream","value":"MZError::Stream","parent":{"krate":0,"index":750},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":671},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1883,"byte_end":1887,"line_start":75,"line_end":75,"column_start":5,"column_end":9},"name":"Data","qualname":"::MZError::Data","value":"MZError::Data","parent":{"krate":0,"index":750},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":675},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1898,"byte_end":1901,"line_start":76,"line_end":76,"column_start":5,"column_end":8},"name":"Mem","qualname":"::MZError::Mem","value":"MZError::Mem","parent":{"krate":0,"index":750},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":679},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1912,"byte_end":1915,"line_start":77,"line_end":77,"column_start":5,"column_end":8},"name":"Buf","qualname":"::MZError::Buf","value":"MZError::Buf","parent":{"krate":0,"index":750},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":683},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1926,"byte_end":1933,"line_start":78,"line_end":78,"column_start":5,"column_end":12},"name":"Version","qualname":"::MZError::Version","value":"MZError::Version","parent":{"krate":0,"index":750},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":687},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1944,"byte_end":1949,"line_start":79,"line_end":79,"column_start":5,"column_end":10},"name":"Param","qualname":"::MZError::Param","value":"MZError::Param","parent":{"krate":0,"index":750},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":750},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1836,"byte_end":1843,"line_start":72,"line_end":72,"column_start":10,"column_end":17},"name":"MZError","qualname":"::MZError","value":"MZError::{ErrNo, Stream, Data, Mem, Buf, Version, Param}","parent":null,"children":[{"krate":0,"index":663},{"krate":0,"index":667},{"krate":0,"index":671},{"krate":0,"index":675},{"krate":0,"index":679},{"krate":0,"index":683},{"krate":0,"index":687}],"decl_id":null,"docs":" A list of miniz failed status codes.\n","sig":null,"attributes":[{"value":"repr(i32)","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1763,"byte_end":1775,"line_start":70,"line_end":70,"column_start":1,"column_end":13}},{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1827,"byte_end":1962,"line_start":72,"line_end":80,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1827,"byte_end":1962,"line_start":72,"line_end":80,"column_start":1,"column_end":2}}]},{"kind":"Type","id":{"krate":0,"index":544},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2047,"byte_end":2055,"line_start":83,"line_end":83,"column_start":10,"column_end":18},"name":"MZResult","qualname":"::MZResult","value":"Result<MZStatus, MZError>","parent":null,"children":[],"decl_id":null,"docs":" `Result` alias for all miniz status codes both successful and failed.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,105,110,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":7170,"byte_end":7182,"line_start":28,"line_end":28,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":48},{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,105,110,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":12186,"byte_end":12203,"line_start":169,"line_end":169,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":96},{"krate":0,"index":98},{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,105,110,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":14859,"byte_end":14864,"line_start":269,"line_end":269,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,105,110,102,108,97,116,101,47,111,117,116,112,117,116,95,98,117,102,102,101,114,46,114,115],"byte_start":80145,"byte_end":80157,"line_start":11,"line_end":11,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":170},{"krate":0,"index":172},{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":178},{"krate":0,"index":180},{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,105,110,102,108,97,116,101,47,109,111,100,46,114,115],"byte_start":3599,"byte_end":3610,"line_start":40,"line_end":40,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":98875,"byte_end":98885,"line_start":206,"line_end":206,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":99227,"byte_end":99237,"line_start":218,"line_end":218,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":102555,"byte_end":102570,"line_start":334,"line_end":334,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":342},{"krate":0,"index":344},{"krate":0,"index":346},{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":103320,"byte_end":103332,"line_start":364,"line_end":364,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":104018,"byte_end":104029,"line_start":389,"line_end":389,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":104931,"byte_end":104942,"line_start":421,"line_end":421,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":105927,"byte_end":105940,"line_start":458,"line_end":458,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":372},{"krate":0,"index":374},{"krate":0,"index":376},{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":107471,"byte_end":107488,"line_start":512,"line_end":512,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":384},{"krate":0,"index":386},{"krate":0,"index":388},{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":108772,"byte_end":108781,"line_start":562,"line_end":562,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":398},{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":110521,"byte_end":110524,"line_start":613,"line_end":613,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":414},{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":112453,"byte_end":112465,"line_start":671,"line_end":671,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":112730,"byte_end":112742,"line_start":681,"line_end":681,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":424},{"krate":0,"index":426},{"krate":0,"index":428},{"krate":0,"index":430},{"krate":0,"index":432},{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":125016,"byte_end":125025,"line_start":1042,"line_end":1042,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":440},{"krate":0,"index":442},{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":132278,"byte_end":132289,"line_start":1224,"line_end":1224,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":133132,"byte_end":133139,"line_start":1257,"line_end":1257,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":456},{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":462},{"krate":0,"index":464},{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,98,117,102,102,101,114,46,114,115],"byte_start":169101,"byte_end":169112,"line_start":18,"line_end":18,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,98,117,102,102,101,114,46,114,115],"byte_start":169398,"byte_end":169406,"line_start":32,"line_end":32,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":516}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1133,"byte_end":1140,"line_start":45,"line_end":45,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":542}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":800,"byte_end":807,"line_start":26,"line_end":26,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":8}},{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,105,110,102,108,97,116,101,47,109,111,100,46,114,115],"byte_start":2198,"byte_end":2202,"line_start":6,"line_end":6,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":18}},{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":817,"byte_end":824,"line_start":27,"line_end":27,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":212}},{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,109,111,100,46,114,115],"byte_start":81430,"byte_end":81434,"line_start":3,"line_end":3,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":214}}],"macro_refs":[],"relations":[{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,105,110,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":7170,"byte_end":7182,"line_start":28,"line_end":28,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":40},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,105,110,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":12186,"byte_end":12203,"line_start":169,"line_end":169,"column_start":6,"column_end":23},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":88},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,105,110,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":14859,"byte_end":14864,"line_start":269,"line_end":269,"column_start":6,"column_end":11},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":546},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,105,110,102,108,97,116,101,47,111,117,116,112,117,116,95,98,117,102,102,101,114,46,114,115],"byte_start":80145,"byte_end":80157,"line_start":11,"line_end":11,"column_start":10,"column_end":22},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,105,110,102,108,97,116,101,47,109,111,100,46,114,115],"byte_start":3599,"byte_end":3610,"line_start":40,"line_end":40,"column_start":6,"column_end":17},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":574},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":98875,"byte_end":98885,"line_start":206,"line_end":206,"column_start":24,"column_end":34},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":630},"to":{"krate":2,"index":2656}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":99227,"byte_end":99237,"line_start":218,"line_end":218,"column_start":6,"column_end":16},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":630},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":102555,"byte_end":102570,"line_start":334,"line_end":334,"column_start":6,"column_end":21},"kind":{"variant":"Impl","fields":[7]},"from":{"krate":0,"index":338},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":103320,"byte_end":103332,"line_start":364,"line_end":364,"column_start":10,"column_end":22},"kind":{"variant":"Impl","fields":[8]},"from":{"krate":0,"index":350},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":104018,"byte_end":104029,"line_start":389,"line_end":389,"column_start":10,"column_end":21},"kind":{"variant":"Impl","fields":[9]},"from":{"krate":0,"index":356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":104931,"byte_end":104942,"line_start":421,"line_end":421,"column_start":10,"column_end":21},"kind":{"variant":"Impl","fields":[10]},"from":{"krate":0,"index":362},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":105927,"byte_end":105940,"line_start":458,"line_end":458,"column_start":10,"column_end":23},"kind":{"variant":"Impl","fields":[11]},"from":{"krate":0,"index":368},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":107471,"byte_end":107488,"line_start":512,"line_end":512,"column_start":10,"column_end":27},"kind":{"variant":"Impl","fields":[12]},"from":{"krate":0,"index":380},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":108772,"byte_end":108781,"line_start":562,"line_end":562,"column_start":6,"column_end":15},"kind":{"variant":"Impl","fields":[13]},"from":{"krate":0,"index":394},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":110521,"byte_end":110524,"line_start":613,"line_end":613,"column_start":6,"column_end":9},"kind":{"variant":"Impl","fields":[14]},"from":{"krate":0,"index":410},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":112453,"byte_end":112465,"line_start":671,"line_end":671,"column_start":18,"column_end":30},"kind":{"variant":"Impl","fields":[15]},"from":{"krate":0,"index":402},"to":{"krate":2,"index":2632}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":112730,"byte_end":112742,"line_start":681,"line_end":681,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[16]},"from":{"krate":0,"index":402},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":125016,"byte_end":125025,"line_start":1042,"line_end":1042,"column_start":6,"column_end":15},"kind":{"variant":"Impl","fields":[17]},"from":{"krate":0,"index":436},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":132278,"byte_end":132289,"line_start":1224,"line_end":1224,"column_start":6,"column_end":17},"kind":{"variant":"Impl","fields":[18]},"from":{"krate":0,"index":446},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,99,111,114,101,46,114,115],"byte_start":133132,"byte_end":133139,"line_start":1257,"line_end":1257,"column_start":6,"column_end":13},"kind":{"variant":"Impl","fields":[19]},"from":{"krate":0,"index":452},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,98,117,102,102,101,114,46,114,115],"byte_start":169101,"byte_end":169112,"line_start":18,"line_end":18,"column_start":18,"column_end":29},"kind":{"variant":"Impl","fields":[20]},"from":{"krate":0,"index":506},"to":{"krate":2,"index":2632}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,100,101,102,108,97,116,101,47,98,117,102,102,101,114,46,114,115],"byte_start":169398,"byte_end":169406,"line_start":32,"line_end":32,"column_start":18,"column_end":26},"kind":{"variant":"Impl","fields":[21]},"from":{"krate":0,"index":512},"to":{"krate":2,"index":2632}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,105,110,105,122,95,111,120,105,100,101,45,48,46,50,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1133,"byte_end":1140,"line_start":45,"line_end":45,"column_start":6,"column_end":13},"kind":{"variant":"Impl","fields":[22]},"from":{"krate":0,"index":702},"to":{"krate":4294967295,"index":4294967295}}]}