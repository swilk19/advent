{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.2","compilation":{"directory":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50],"program":"/Users/swilkins/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","publicsuffix","/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/publicsuffix-1.5.2/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=ec3458435b3c2280","-C","extra-filename=-ec3458435b3c2280","--out-dir","/Users/swilkins/projects/personal/advent/target/rls/debug/deps","-L","dependency=/Users/swilkins/projects/personal/advent/target/rls/debug/deps","--extern","error_chain=/Users/swilkins/projects/personal/advent/target/rls/debug/deps/liberror_chain-3e96cf0c920c8520.rmeta","--extern","idna=/Users/swilkins/projects/personal/advent/target/rls/debug/deps/libidna-a74df3dcdd53de44.rmeta","--extern","lazy_static=/Users/swilkins/projects/personal/advent/target/rls/debug/deps/liblazy_static-716389ee11b6768d.rmeta","--extern","regex=/Users/swilkins/projects/personal/advent/target/rls/debug/deps/libregex-6a5d8941460de8c6.rmeta","--extern","url=/Users/swilkins/projects/personal/advent/target/rls/debug/deps/liburl-463427ec020a0ddf.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/swilkins/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,112,114,111,106,101,99,116,115,47,112,101,114,115,111,110,97,108,47,97,100,118,101,110,116,47,116,97,114,103,101,116,47,114,108,115,47,100,101,98,117,103,47,100,101,112,115,47,108,105,98,112,117,98,108,105,99,115,117,102,102,105,120,45,101,99,51,52,53,56,52,51,53,98,51,99,50,50,56,48,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"publicsuffix","disambiguator":[5704217095187077095,5750808164009234392]},"crate_root":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/publicsuffix-1.5.2/src","external_crates":[{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/publicsuffix-1.5.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[1174904389790056627,11980377943522478020]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/publicsuffix-1.5.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[10276658452371951978,13955158368012629210]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/publicsuffix-1.5.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6212298039852757345,13056973723602582898]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/publicsuffix-1.5.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[2472034652193248465,17026985867558116202]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/publicsuffix-1.5.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3739559732288738709,15577672448928610229]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/publicsuffix-1.5.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[3280591782733940230,2391034779898666253]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/publicsuffix-1.5.2/src/lib.rs","num":7,"id":{"name":"rustc_demangle","disambiguator":[17768744230194090356,6249204898376423079]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/publicsuffix-1.5.2/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[18294290771476076947,9562268468698684298]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/publicsuffix-1.5.2/src/lib.rs","num":9,"id":{"name":"backtrace_sys","disambiguator":[6239912042412093818,71364874345811638]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/publicsuffix-1.5.2/src/lib.rs","num":10,"id":{"name":"panic_unwind","disambiguator":[17618422533075753481,12682123369635823587]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/publicsuffix-1.5.2/src/lib.rs","num":11,"id":{"name":"error_chain","disambiguator":[17320898494557554027,8695860849233212069]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/publicsuffix-1.5.2/src/lib.rs","num":12,"id":{"name":"backtrace","disambiguator":[13614305912243617560,1999350649925490555]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/publicsuffix-1.5.2/src/lib.rs","num":13,"id":{"name":"libc","disambiguator":[7498079790663940337,411304210797161399]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/publicsuffix-1.5.2/src/lib.rs","num":14,"id":{"name":"cfg_if","disambiguator":[8507095715086889429,10830784638613307922]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/publicsuffix-1.5.2/src/lib.rs","num":15,"id":{"name":"rustc_demangle","disambiguator":[10054799421321389735,4596445942357442880]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/publicsuffix-1.5.2/src/lib.rs","num":16,"id":{"name":"lazy_static","disambiguator":[885753281104146484,3864722420131836857]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/publicsuffix-1.5.2/src/lib.rs","num":17,"id":{"name":"regex","disambiguator":[8578560549950702889,1459983275427580042]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/publicsuffix-1.5.2/src/lib.rs","num":18,"id":{"name":"aho_corasick","disambiguator":[16728217958666473452,14993591789753237555]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/publicsuffix-1.5.2/src/lib.rs","num":19,"id":{"name":"memchr","disambiguator":[2579530749686103742,15618476885851521492]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/publicsuffix-1.5.2/src/lib.rs","num":20,"id":{"name":"thread_local","disambiguator":[14846557975834199375,10445014050961091431]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/publicsuffix-1.5.2/src/lib.rs","num":21,"id":{"name":"regex_syntax","disambiguator":[1437189810970265818,4848319094405570017]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/publicsuffix-1.5.2/src/lib.rs","num":22,"id":{"name":"ucd_util","disambiguator":[3406500242550688289,10115405803071677630]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/publicsuffix-1.5.2/src/lib.rs","num":23,"id":{"name":"utf8_ranges","disambiguator":[9888077699495720407,14526280978833532052]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/publicsuffix-1.5.2/src/lib.rs","num":24,"id":{"name":"idna","disambiguator":[13614035108335902277,11459429992654570062]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/publicsuffix-1.5.2/src/lib.rs","num":25,"id":{"name":"matches","disambiguator":[1112545911358006315,12945327846152223986]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/publicsuffix-1.5.2/src/lib.rs","num":26,"id":{"name":"unicode_bidi","disambiguator":[4119042208193511892,10953808689009780794]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/publicsuffix-1.5.2/src/lib.rs","num":27,"id":{"name":"unicode_normalization","disambiguator":[1369302395223047357,17866662837273657472]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/publicsuffix-1.5.2/src/lib.rs","num":28,"id":{"name":"smallvec","disambiguator":[8839403059757376637,11948419878540031419]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/publicsuffix-1.5.2/src/lib.rs","num":29,"id":{"name":"url","disambiguator":[17714668187625049100,8160841029923763707]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/publicsuffix-1.5.2/src/lib.rs","num":30,"id":{"name":"percent_encoding","disambiguator":[9738821500626869630,14133381764842539107]}}],"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":25038,"line_start":1,"line_end":764,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":160},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2695,"byte_end":2701,"line_start":93,"line_end":93,"column_start":18,"column_end":24},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":252},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2703,"byte_end":2708,"line_start":93,"line_end":93,"column_start":26,"column_end":31},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":25038,"line_start":1,"line_end":764,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/publicsuffix-1.5.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":28},{"krate":0,"index":30},{"krate":0,"index":32},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":46},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":274},{"krate":0,"index":290},{"krate":0,"index":284},{"krate":0,"index":280},{"krate":0,"index":276},{"krate":0,"index":294},{"krate":0,"index":296},{"krate":0,"index":300},{"krate":0,"index":320},{"krate":0,"index":316},{"krate":0,"index":314},{"krate":0,"index":310},{"krate":0,"index":306},{"krate":0,"index":302},{"krate":0,"index":324},{"krate":0,"index":344},{"krate":0,"index":340},{"krate":0,"index":334},{"krate":0,"index":330},{"krate":0,"index":326},{"krate":0,"index":348},{"krate":0,"index":368},{"krate":0,"index":364},{"krate":0,"index":358},{"krate":0,"index":354},{"krate":0,"index":350},{"krate":0,"index":372},{"krate":0,"index":392},{"krate":0,"index":388},{"krate":0,"index":382},{"krate":0,"index":378},{"krate":0,"index":374},{"krate":0,"index":396},{"krate":0,"index":398},{"krate":0,"index":400},{"krate":0,"index":410},{"krate":0,"index":416},{"krate":0,"index":418},{"krate":0,"index":420},{"krate":0,"index":430},{"krate":0,"index":56},{"krate":0,"index":60},{"krate":0,"index":64},{"krate":0,"index":68},{"krate":0,"index":72},{"krate":0,"index":76},{"krate":0,"index":112},{"krate":0,"index":120},{"krate":0,"index":124},{"krate":0,"index":148},{"krate":0,"index":152},{"krate":0,"index":156}],"decl_id":null,"docs":" Robust domain name parsing using the Public Suffix List","sig":null,"attributes":[{"value":"recursion_limit = \"1024\"","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2065,"byte_end":2093,"line_start":61,"line_end":61,"column_start":1,"column_end":29}}]},{"kind":"Mod","id":{"krate":0,"index":16},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,101,114,114,111,114,115,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"errors","qualname":"::errors","value":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/publicsuffix-1.5.2/src/errors.rs","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":254},{"krate":0,"index":162},{"krate":0,"index":180},{"krate":0,"index":198},{"krate":0,"index":204},{"krate":0,"index":208},{"krate":0,"index":212},{"krate":0,"index":216},{"krate":0,"index":220},{"krate":0,"index":224},{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":266},{"krate":0,"index":270},{"krate":0,"index":228},{"krate":0,"index":232},{"krate":0,"index":236},{"krate":0,"index":240},{"krate":0,"index":244},{"krate":0,"index":248},{"krate":0,"index":160}],"decl_id":null,"docs":" Errors returned by this library\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":54},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2927,"byte_end":2935,"line_start":103,"line_end":103,"column_start":11,"column_end":19},"name":"LIST_URL","qualname":"::LIST_URL","value":"&'static str","parent":null,"children":[],"decl_id":null,"docs":" The official URL of the list\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":294},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3399,"byte_end":3403,"line_start":117,"line_end":117,"column_start":12,"column_end":16},"name":"List","qualname":"::List","value":"List {  }","parent":null,"children":[{"krate":0,"index":173}],"decl_id":null,"docs":" Stores the public suffix list","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":324},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3693,"byte_end":3699,"line_start":131,"line_end":131,"column_start":12,"column_end":18},"name":"Domain","qualname":"::Domain","value":"Domain {  }","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":183},{"krate":0,"index":185},{"krate":0,"index":187}],"decl_id":null,"docs":" Holds information about a particular domain","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3682,"byte_end":3805,"line_start":131,"line_end":136,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":191},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3965,"byte_end":3967,"line_start":143,"line_end":143,"column_start":5,"column_end":7},"name":"Ip","qualname":"::Host::Ip","value":"Host::Ip(IpAddr)","parent":{"krate":0,"index":348},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":195},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3981,"byte_end":3987,"line_start":144,"line_end":144,"column_start":5,"column_end":11},"name":"Domain","qualname":"::Host::Domain","value":"Host::Domain(Domain)","parent":{"krate":0,"index":348},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":348},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3954,"byte_end":3958,"line_start":142,"line_end":142,"column_start":10,"column_end":14},"name":"Host","qualname":"::Host","value":"Host::{Ip, Domain}","parent":null,"children":[{"krate":0,"index":191},{"krate":0,"index":195}],"decl_id":null,"docs":" Holds information about a particular host","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3945,"byte_end":3998,"line_start":142,"line_end":145,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":372},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4157,"byte_end":4164,"line_start":151,"line_end":151,"column_start":12,"column_end":19},"name":"DnsName","qualname":"::DnsName","value":"DnsName {  }","parent":null,"children":[{"krate":0,"index":201},{"krate":0,"index":203}],"decl_id":null,"docs":" Holds information about a particular DNS name","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4146,"byte_end":4214,"line_start":151,"line_end":154,"column_start":1,"column_end":2}}]},{"kind":"Trait","id":{"krate":0,"index":56},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5828,"byte_end":5835,"line_start":199,"line_end":199,"column_start":11,"column_end":18},"name":"IntoUrl","qualname":"::IntoUrl","value":"IntoUrl","parent":null,"children":[{"krate":0,"index":58}],"decl_id":null,"docs":" Converts a type into a Url object\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5845,"byte_end":5853,"line_start":200,"line_end":200,"column_start":8,"column_end":16},"name":"into_url","qualname":"::IntoUrl::into_url","value":"fn (self) -> Result<Url>","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9443,"byte_end":9448,"line_start":313,"line_end":313,"column_start":12,"column_end":17},"name":"empty","qualname":"<List>::empty","value":"fn () -> List","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty List without any rules","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9763,"byte_end":9772,"line_start":326,"line_end":326,"column_start":12,"column_end":21},"name":"from_path","qualname":"<List>::from_path","value":"fn <P> (path: P) -> Result<List>","parent":null,"children":[],"decl_id":null,"docs":" Fetch the list from a local file\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10401,"byte_end":10412,"line_start":342,"line_end":342,"column_start":12,"column_end":23},"name":"from_reader","qualname":"<List>::from_reader","value":"fn <R> (mut reader: R) -> Result<List>","parent":null,"children":[],"decl_id":null,"docs":" Build the list from the result of anything that implements `std::io::Read`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10822,"byte_end":10833,"line_start":353,"line_end":353,"column_start":12,"column_end":23},"name":"from_string","qualname":"<List>::from_string","value":"fn (string: String) -> Result<List>","parent":null,"children":[],"decl_id":null,"docs":" Build the list from a string","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11156,"byte_end":11164,"line_start":362,"line_end":362,"column_start":12,"column_end":20},"name":"from_str","qualname":"<List>::from_str","value":"fn (string: &str) -> Result<List>","parent":null,"children":[],"decl_id":null,"docs":" Build the list from a str","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12058,"byte_end":12063,"line_start":390,"line_end":390,"column_start":12,"column_end":17},"name":"icann","qualname":"<List>::icann","value":"fn (&self) -> Vec<&str>","parent":null,"children":[],"decl_id":null,"docs":" Gets a list of all ICANN domain suffices\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12191,"byte_end":12198,"line_start":395,"line_end":395,"column_start":12,"column_end":19},"name":"private","qualname":"<List>::private","value":"fn (&self) -> Vec<&str>","parent":null,"children":[],"decl_id":null,"docs":" Gets a list of all private domain suffices\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12320,"byte_end":12323,"line_start":400,"line_end":400,"column_start":12,"column_end":15},"name":"all","qualname":"<List>::all","value":"fn (&self) -> Vec<&str>","parent":null,"children":[],"decl_id":null,"docs":" Gets a list of all domain suffices\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12626,"byte_end":12638,"line_start":411,"line_end":411,"column_start":12,"column_end":24},"name":"parse_domain","qualname":"<List>::parse_domain","value":"fn (&self, domain: &str) -> Result<Domain>","parent":null,"children":[],"decl_id":null,"docs":" Parses a domain using the list\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12885,"byte_end":12895,"line_start":419,"line_end":419,"column_start":12,"column_end":22},"name":"parse_host","qualname":"<List>::parse_host","value":"fn (&self, host: &str) -> Result<Host>","parent":null,"children":[],"decl_id":null,"docs":" Parses a host using the list","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13016,"byte_end":13025,"line_start":424,"line_end":424,"column_start":12,"column_end":21},"name":"parse_url","qualname":"<List>::parse_url","value":"fn <U> (&self, url: U) -> Result<Host>","parent":null,"children":[],"decl_id":null,"docs":" Extracts Host from a URL\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":14408,"byte_end":14419,"line_start":454,"line_end":454,"column_start":12,"column_end":23},"name":"parse_email","qualname":"<List>::parse_email","value":"fn (&self, address: &str) -> Result<Host>","parent":null,"children":[],"decl_id":null,"docs":" Extracts Host from an email address","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":15260,"byte_end":15269,"line_start":477,"line_end":477,"column_start":12,"column_end":21},"name":"parse_str","qualname":"<List>::parse_str","value":"fn (&self, string: &str) -> Result<Host>","parent":null,"children":[],"decl_id":null,"docs":" Parses any arbitrary string","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":15619,"byte_end":15633,"line_start":488,"line_end":488,"column_start":12,"column_end":26},"name":"parse_dns_name","qualname":"<List>::parse_dns_name","value":"fn (&self, name: &str) -> Result<DnsName>","parent":null,"children":[],"decl_id":null,"docs":" Parses any arbitrary string that can be used as a key in a DNS database\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":16973,"byte_end":16978,"line_start":528,"line_end":528,"column_start":12,"column_end":17},"name":"is_ip","qualname":"<Host>::is_ip","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" A convenient method to simply check if a host is an IP address\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":17171,"byte_end":17180,"line_start":536,"line_end":536,"column_start":12,"column_end":21},"name":"is_domain","qualname":"<Host>::is_domain","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" A convenient method to simply check if a host is a domain name\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":17839,"byte_end":17855,"line_start":558,"line_end":558,"column_start":12,"column_end":28},"name":"has_valid_syntax","qualname":"<Domain>::has_valid_syntax","value":"fn (domain: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a domain has valid syntax\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":23141,"byte_end":23145,"line_start":696,"line_end":696,"column_start":12,"column_end":16},"name":"root","qualname":"<Domain>::root","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Gets the root domain portion if any\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":23345,"byte_end":23351,"line_start":704,"line_end":704,"column_start":12,"column_end":18},"name":"suffix","qualname":"<Domain>::suffix","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Gets the suffix if any\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":23553,"byte_end":23563,"line_start":712,"line_end":712,"column_start":12,"column_end":22},"name":"is_private","qualname":"<Domain>::is_private","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the domain has a private suffix\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":23837,"byte_end":23845,"line_start":723,"line_end":723,"column_start":12,"column_end":20},"name":"is_icann","qualname":"<Domain>::is_icann","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the domain has an ICANN suffix\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":24516,"byte_end":24532,"line_start":742,"line_end":742,"column_start":12,"column_end":28},"name":"has_known_suffix","qualname":"<Domain>::has_known_suffix","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether this domain's suffix is in the list","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":24842,"byte_end":24848,"line_start":755,"line_end":755,"column_start":12,"column_end":18},"name":"domain","qualname":"<DnsName>::domain","value":"fn (&self) -> Option<&Domain>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the root domain from a DNS name, if any\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5896,"byte_end":5899,"line_start":203,"line_end":203,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6205,"byte_end":6211,"line_start":221,"line_end":221,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7448,"byte_end":7452,"line_start":261,"line_end":261,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":80},{"krate":0,"index":82},{"krate":0,"index":84},{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":96},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":16241,"byte_end":16245,"line_start":507,"line_end":507,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":17319,"byte_end":17323,"line_start":544,"line_end":544,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":17550,"byte_end":17556,"line_start":553,"line_end":553,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":128},{"krate":0,"index":130},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":142},{"krate":0,"index":144},{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":24608,"byte_end":24614,"line_start":747,"line_end":747,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":24764,"byte_end":24771,"line_start":753,"line_end":753,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":24937,"byte_end":24944,"line_start":760,"line_end":760,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2296,"byte_end":2302,"line_start":73,"line_end":73,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":16}}],"macro_refs":[],"relations":[{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5896,"byte_end":5899,"line_start":203,"line_end":203,"column_start":18,"column_end":21},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":29,"index":1208},"to":{"krate":0,"index":56}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6205,"byte_end":6211,"line_start":221,"line_end":221,"column_start":18,"column_end":24},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":5,"index":5504},"to":{"krate":0,"index":56}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7448,"byte_end":7452,"line_start":261,"line_end":261,"column_start":6,"column_end":10},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":16241,"byte_end":16245,"line_start":507,"line_end":507,"column_start":6,"column_end":10},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":348},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":17319,"byte_end":17323,"line_start":544,"line_end":544,"column_start":23,"column_end":27},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":348},"to":{"krate":2,"index":8430}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":17550,"byte_end":17556,"line_start":553,"line_end":553,"column_start":6,"column_end":12},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":324},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":24608,"byte_end":24614,"line_start":747,"line_end":747,"column_start":23,"column_end":29},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":324},"to":{"krate":2,"index":8430}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":24764,"byte_end":24771,"line_start":753,"line_end":753,"column_start":6,"column_end":13},"kind":{"variant":"Impl","fields":[7]},"from":{"krate":0,"index":372},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,112,117,98,108,105,99,115,117,102,102,105,120,45,49,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":24937,"byte_end":24944,"line_start":760,"line_end":760,"column_start":23,"column_end":30},"kind":{"variant":"Impl","fields":[8]},"from":{"krate":0,"index":372},"to":{"krate":2,"index":8430}}]}