{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.2","compilation":{"directory":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48],"program":"/Users/swilkins/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","error_chain","/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.12.0/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"backtrace\"","--cfg","feature=\"default\"","--cfg","feature=\"example_generated\"","-C","metadata=3e96cf0c920c8520","-C","extra-filename=-3e96cf0c920c8520","--out-dir","/Users/swilkins/projects/personal/advent/target/rls/debug/deps","-L","dependency=/Users/swilkins/projects/personal/advent/target/rls/debug/deps","--extern","backtrace=/Users/swilkins/projects/personal/advent/target/rls/debug/deps/libbacktrace-67491c82f745d3fa.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/swilkins/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,112,114,111,106,101,99,116,115,47,112,101,114,115,111,110,97,108,47,97,100,118,101,110,116,47,116,97,114,103,101,116,47,114,108,115,47,100,101,98,117,103,47,100,101,112,115,47,108,105,98,101,114,114,111,114,95,99,104,97,105,110,45,51,101,57,54,99,102,48,99,57,50,48,99,56,53,50,48,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"error_chain","disambiguator":[17320898494557554027,8695860849233212069]},"crate_root":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.12.0/src","external_crates":[{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.12.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[1174904389790056627,11980377943522478020]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.12.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[10276658452371951978,13955158368012629210]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.12.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6212298039852757345,13056973723602582898]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.12.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[2472034652193248465,17026985867558116202]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.12.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3739559732288738709,15577672448928610229]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.12.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[3280591782733940230,2391034779898666253]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.12.0/src/lib.rs","num":7,"id":{"name":"rustc_demangle","disambiguator":[17768744230194090356,6249204898376423079]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.12.0/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[18294290771476076947,9562268468698684298]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.12.0/src/lib.rs","num":9,"id":{"name":"backtrace_sys","disambiguator":[6239912042412093818,71364874345811638]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.12.0/src/lib.rs","num":10,"id":{"name":"panic_unwind","disambiguator":[17618422533075753481,12682123369635823587]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.12.0/src/backtrace.rs","num":11,"id":{"name":"backtrace","disambiguator":[13614305912243617560,1999350649925490555]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.12.0/src/backtrace.rs","num":12,"id":{"name":"libc","disambiguator":[7498079790663940337,411304210797161399]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.12.0/src/backtrace.rs","num":13,"id":{"name":"cfg_if","disambiguator":[8507095715086889429,10830784638613307922]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.12.0/src/backtrace.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[10054799421321389735,4596445942357442880]}}],"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":26496,"line_start":1,"line_end":803,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":30},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":20016,"byte_end":20024,"line_start":548,"line_end":548,"column_start":21,"column_end":29},"alias_span":null,"name":"ExitCode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":11,"index":458},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,98,97,99,107,116,114,97,99,101,46,114,115],"byte_start":58505,"byte_end":58514,"line_start":1,"line_end":1,"column_start":21,"column_end":30},"alias_span":null,"name":"Backtrace","value":"","parent":{"krate":0,"index":48}},{"kind":"Use","ref_id":{"krate":0,"index":380},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,98,97,99,107,116,114,97,99,101,46,114,115],"byte_start":58516,"byte_end":58533,"line_start":1,"line_end":1,"column_start":32,"column_end":49},"alias_span":null,"name":"InternalBacktrace","value":"","parent":{"krate":0,"index":48}},{"kind":"Use","ref_id":{"krate":11,"index":458},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":20125,"byte_end":20134,"line_start":552,"line_end":552,"column_start":20,"column_end":29},"alias_span":null,"name":"Backtrace","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":380},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":20170,"byte_end":20187,"line_start":554,"line_end":554,"column_start":20,"column_end":37},"alias_span":null,"name":"InternalBacktrace","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":26496,"line_start":1,"line_end":803,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.12.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":16},{"krate":0,"index":26},{"krate":0,"index":42},{"krate":0,"index":44},{"krate":0,"index":48},{"krate":0,"index":100},{"krate":0,"index":102},{"krate":0,"index":386},{"krate":0,"index":388},{"krate":0,"index":104},{"krate":0,"index":108},{"krate":0,"index":114},{"krate":0,"index":392},{"krate":0,"index":394},{"krate":0,"index":136},{"krate":0,"index":398},{"krate":0,"index":400},{"krate":0,"index":140},{"krate":0,"index":144},{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":154}],"decl_id":null,"docs":" A library for consistent and reliable error handling","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":22,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":30},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,113,117,105,99,107,95,109,97,105,110,46,114,115],"byte_start":56831,"byte_end":56839,"line_start":62,"line_end":62,"column_start":11,"column_end":19},"name":"ExitCode","qualname":"::quick_main::ExitCode","value":"ExitCode","parent":null,"children":[{"krate":0,"index":32}],"decl_id":null,"docs":" Represents a value that can be used as the exit status of the process.\n See [`quick_main!`](macro.quick_main.html).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,113,117,105,99,107,95,109,97,105,110,46,114,115],"byte_start":56902,"byte_end":56906,"line_start":64,"line_end":64,"column_start":8,"column_end":12},"name":"code","qualname":"::quick_main::ExitCode::code","value":"fn (self) -> i32","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" Returns the value to use as the exit status.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":44},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,101,120,97,109,112,108,101,95,103,101,110,101,114,97,116,101,100,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"example_generated","qualname":"::example_generated","value":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.12.0/src/example_generated.rs","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":358},{"krate":0,"index":360},{"krate":0,"index":264},{"krate":0,"index":282},{"krate":0,"index":300},{"krate":0,"index":306},{"krate":0,"index":310},{"krate":0,"index":314},{"krate":0,"index":318},{"krate":0,"index":322},{"krate":0,"index":326},{"krate":0,"index":366},{"krate":0,"index":368},{"krate":0,"index":372},{"krate":0,"index":376},{"krate":0,"index":330},{"krate":0,"index":334},{"krate":0,"index":338},{"krate":0,"index":342},{"krate":0,"index":346},{"krate":0,"index":350},{"krate":0,"index":354},{"krate":0,"index":262}],"decl_id":null,"docs":" These modules show an example of code generated by the macro. **IT MUST NOT BE\n USED OUTSIDE THIS CRATE**.","sig":null,"attributes":[{"value":"cfg(feature = \"example_generated\")","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":20026,"byte_end":20063,"line_start":549,"line_end":549,"column_start":1,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":46},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,101,120,97,109,112,108,101,95,103,101,110,101,114,97,116,101,100,46,114,115],"byte_start":58157,"byte_end":58162,"line_start":23,"line_end":23,"column_start":9,"column_end":14},"name":"inner","qualname":"::example_generated::inner","value":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.12.0/src/example_generated.rs","parent":null,"children":[{"krate":0,"index":240},{"krate":0,"index":242},{"krate":0,"index":158},{"krate":0,"index":176},{"krate":0,"index":194},{"krate":0,"index":200},{"krate":0,"index":204},{"krate":0,"index":208},{"krate":0,"index":212},{"krate":0,"index":248},{"krate":0,"index":250},{"krate":0,"index":254},{"krate":0,"index":258},{"krate":0,"index":216},{"krate":0,"index":220},{"krate":0,"index":224},{"krate":0,"index":228},{"krate":0,"index":232},{"krate":0,"index":236},{"krate":0,"index":156}],"decl_id":null,"docs":" Another code generated by the macro.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":380},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,98,97,99,107,116,114,97,99,101,46,114,115],"byte_start":58880,"byte_end":58897,"line_start":16,"line_end":16,"column_start":16,"column_end":33},"name":"InternalBacktrace","qualname":"::backtrace::imp::InternalBacktrace","value":"InternalBacktrace {  }","parent":null,"children":[{"krate":0,"index":185}],"decl_id":null,"docs":" Internal representation of a backtrace\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,98,97,99,107,116,114,97,99,101,46,114,115],"byte_start":59462,"byte_end":59465,"line_start":35,"line_end":35,"column_start":16,"column_end":19},"name":"new","qualname":"<InternalBacktrace>::new","value":"fn () -> InternalBacktrace","parent":null,"children":[],"decl_id":null,"docs":" Returns a backtrace of the current call stack if `RUST_BACKTRACE`\n is set to anything but ``0``, and `None` otherwise.  This is used\n in the generated error implementations.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,98,97,99,107,116,114,97,99,101,46,114,115],"byte_start":60485,"byte_end":60497,"line_start":63,"line_end":63,"column_start":16,"column_end":28},"name":"as_backtrace","qualname":"<InternalBacktrace>::as_backtrace","value":"fn (&self) -> Option<&Backtrace>","parent":null,"children":[],"decl_id":null,"docs":" Acquire the internal backtrace\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":386},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":20287,"byte_end":20291,"line_start":558,"line_end":558,"column_start":12,"column_end":16},"name":"Iter","qualname":"::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Iterator over the error chain using the `Error::cause()` method.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":20431,"byte_end":20434,"line_start":562,"line_end":562,"column_start":12,"column_end":15},"name":"new","qualname":"<Iter>::new","value":"fn (err: Option<&'a error::Error>) -> Iter<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new iterator over the error chain using `Error::cause()`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":114},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":20909,"byte_end":20921,"line_start":583,"line_end":583,"column_start":11,"column_end":23},"name":"ChainedError","qualname":"::ChainedError","value":"ChainedError: error::Error + Send + 'static","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":120},{"krate":0,"index":122},{"krate":0,"index":124},{"krate":0,"index":126},{"krate":0,"index":128},{"krate":0,"index":130},{"krate":0,"index":132},{"krate":0,"index":134}],"decl_id":null,"docs":" This trait is implemented on all the errors generated by the `error_chain`\n macro.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":116},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":20994,"byte_end":21003,"line_start":585,"line_end":585,"column_start":10,"column_end":19},"name":"ErrorKind","qualname":"::ChainedError::ErrorKind","value":"type ErrorKind;","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":" Associated kind type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":21081,"byte_end":21090,"line_start":588,"line_end":588,"column_start":8,"column_end":17},"name":"from_kind","qualname":"::ChainedError::from_kind","value":"fn (kind: Self::ErrorKind) -> Self","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":" Constructs an error from a kind, and generates a backtrace.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":21242,"byte_end":21252,"line_start":591,"line_end":591,"column_start":8,"column_end":18},"name":"with_chain","qualname":"::ChainedError::with_chain","value":"fn <E, K> (error: E, kind: K) -> Self","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":" Constructs a chained error from another error and a kind, and generates a backtrace.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":21455,"byte_end":21459,"line_start":597,"line_end":597,"column_start":8,"column_end":12},"name":"kind","qualname":"::ChainedError::kind","value":"fn (&self) -> &Self::ErrorKind","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":" Returns the kind of the error.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":21535,"byte_end":21539,"line_start":600,"line_end":600,"column_start":8,"column_end":12},"name":"iter","qualname":"::ChainedError::iter","value":"fn (&self) -> Iter","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":" Iterates over the error chain.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":21622,"byte_end":21631,"line_start":603,"line_end":603,"column_start":8,"column_end":17},"name":"backtrace","qualname":"::ChainedError::backtrace","value":"fn (&self) -> Option<&Backtrace>","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":" Returns the backtrace associated with this error.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":21857,"byte_end":21870,"line_start":609,"line_end":609,"column_start":8,"column_end":21},"name":"display_chain","qualname":"::ChainedError::display_chain","value":"fn <'a> (&'a self) -> DisplayChain<'a, Self>","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":" Returns an object which implements `Display` for printing the full\n context of this error.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":22004,"byte_end":22013,"line_start":614,"line_end":614,"column_start":8,"column_end":17},"name":"chain_err","qualname":"::ChainedError::chain_err","value":"fn <F, EK> (self, error: F) -> Self","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":" Extends the error chain with a new entry.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":22187,"byte_end":22190,"line_start":620,"line_end":620,"column_start":8,"column_end":11},"name":"new","qualname":"::ChainedError::new","value":"fn (kind: Self::ErrorKind, state: State) -> Self","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":" Creates an error from its parts.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":22403,"byte_end":22420,"line_start":625,"line_end":625,"column_start":8,"column_end":25},"name":"extract_backtrace","qualname":"::ChainedError::extract_backtrace","value":"fn (e: &(error::Error + Send + 'static)) -> Option<InternalBacktrace>","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":" Returns the first known backtrace, either from its State or from one\n of the errors from `foreign_links`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":392},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":22593,"byte_end":22605,"line_start":631,"line_end":631,"column_start":12,"column_end":24},"name":"DisplayChain","qualname":"::DisplayChain","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct which formats an error for output.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":398},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":23186,"byte_end":23191,"line_start":655,"line_end":655,"column_start":12,"column_end":17},"name":"State","qualname":"::State","value":"State { next_error, backtrace }","parent":null,"children":[{"krate":0,"index":207},{"krate":0,"index":209}],"decl_id":null,"docs":" Common state between errors.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":207},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":23241,"byte_end":23251,"line_start":657,"line_end":657,"column_start":9,"column_end":19},"name":"next_error","qualname":"::State::next_error","value":"std::option::Option<std::boxed::Box<(dyn std::error::Error + std::marker::Send + 'static)>>","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":" Next error in the error chain.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":209},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":23336,"byte_end":23345,"line_start":659,"line_end":659,"column_start":9,"column_end":18},"name":"backtrace","qualname":"::State::backtrace","value":"backtrace::imp::InternalBacktrace","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":" Backtrace for the current error.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":23593,"byte_end":23596,"line_start":673,"line_end":673,"column_start":12,"column_end":15},"name":"new","qualname":"<State>::new","value":"fn <CE> (e: Box<error::Error + Send>) -> State","parent":null,"children":[],"decl_id":null,"docs":" Creates a new State type\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":23918,"byte_end":23927,"line_start":683,"line_end":683,"column_start":12,"column_end":21},"name":"backtrace","qualname":"<State>::backtrace","value":"fn (&self) -> Option<&Backtrace>","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner backtrace if present.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":154},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":26469,"byte_end":26473,"line_start":801,"line_end":801,"column_start":9,"column_end":13},"name":"mock","qualname":"::mock","value":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.12.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":488},{"krate":0,"index":490},{"krate":0,"index":406},{"krate":0,"index":424},{"krate":0,"index":442},{"krate":0,"index":448},{"krate":0,"index":452},{"krate":0,"index":456},{"krate":0,"index":460},{"krate":0,"index":496},{"krate":0,"index":498},{"krate":0,"index":502},{"krate":0,"index":506},{"krate":0,"index":464},{"krate":0,"index":468},{"krate":0,"index":472},{"krate":0,"index":476},{"krate":0,"index":480},{"krate":0,"index":484},{"krate":0,"index":404}],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":1,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,98,97,99,107,116,114,97,99,101,46,114,115],"byte_start":59086,"byte_end":59099,"line_start":25,"line_end":25,"column_start":26,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,98,97,99,107,116,114,97,99,101,46,114,115],"byte_start":59128,"byte_end":59141,"line_start":26,"line_end":26,"column_start":26,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,98,97,99,107,116,114,97,99,101,46,114,115],"byte_start":59196,"byte_end":59213,"line_start":30,"line_end":30,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,98,97,99,107,116,114,97,99,101,46,114,115],"byte_start":60981,"byte_end":60998,"line_start":79,"line_end":79,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":20333,"byte_end":20337,"line_start":560,"line_end":560,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":20529,"byte_end":20533,"line_start":567,"line_end":567,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":22664,"byte_end":22676,"line_start":633,"line_end":633,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":23386,"byte_end":23391,"line_start":662,"line_end":662,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":23541,"byte_end":23546,"line_start":671,"line_end":671,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":20072,"byte_end":20089,"line_start":550,"line_end":550,"column_start":9,"column_end":26},"ref_id":{"krate":0,"index":44}}],"macro_refs":[],"relations":[{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,98,97,99,107,116,114,97,99,101,46,114,115],"byte_start":59086,"byte_end":59099,"line_start":25,"line_end":25,"column_start":26,"column_end":39},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":80},"to":{"krate":2,"index":1700}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,98,97,99,107,116,114,97,99,101,46,114,115],"byte_start":59128,"byte_end":59141,"line_start":26,"line_end":26,"column_start":26,"column_end":39},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":80},"to":{"krate":2,"index":1712}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,98,97,99,107,116,114,97,99,101,46,114,115],"byte_start":59196,"byte_end":59213,"line_start":30,"line_end":30,"column_start":10,"column_end":27},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":380},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,98,97,99,107,116,114,97,99,101,46,114,115],"byte_start":60981,"byte_end":60998,"line_start":79,"line_end":79,"column_start":25,"column_end":42},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":380},"to":{"krate":2,"index":8426}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":20333,"byte_end":20337,"line_start":560,"line_end":560,"column_start":10,"column_end":14},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":386},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":20529,"byte_end":20533,"line_start":567,"line_end":567,"column_start":23,"column_end":27},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":386},"to":{"krate":2,"index":4316}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":20930,"byte_end":20935,"line_start":583,"line_end":583,"column_start":32,"column_end":37},"kind":"SuperTrait","from":{"krate":1,"index":2470},"to":{"krate":0,"index":114}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":20938,"byte_end":20942,"line_start":583,"line_end":583,"column_start":40,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":1700},"to":{"krate":0,"index":114}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":22664,"byte_end":22676,"line_start":633,"line_end":633,"column_start":30,"column_end":42},"kind":{"variant":"Impl","fields":[7]},"from":{"krate":0,"index":392},"to":{"krate":2,"index":8430}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":23386,"byte_end":23391,"line_start":662,"line_end":662,"column_start":18,"column_end":23},"kind":{"variant":"Impl","fields":[8]},"from":{"krate":0,"index":398},"to":{"krate":2,"index":2632}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,114,114,111,114,45,99,104,97,105,110,45,48,46,49,50,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":23541,"byte_end":23546,"line_start":671,"line_end":671,"column_start":6,"column_end":11},"kind":{"variant":"Impl","fields":[9]},"from":{"krate":0,"index":398},"to":{"krate":4294967295,"index":4294967295}}]}