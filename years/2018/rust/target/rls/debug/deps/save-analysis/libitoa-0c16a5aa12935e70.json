{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.2","compilation":{"directory":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,105,116,111,97,45,48,46,52,46,52],"program":"/Users/swilkins/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","itoa","/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.4/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=0c16a5aa12935e70","-C","extra-filename=-0c16a5aa12935e70","--out-dir","/Users/swilkins/projects/personal/advent/target/rls/debug/deps","-L","dependency=/Users/swilkins/projects/personal/advent/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/swilkins/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,112,114,111,106,101,99,116,115,47,112,101,114,115,111,110,97,108,47,97,100,118,101,110,116,47,116,97,114,103,101,116,47,114,108,115,47,100,101,98,117,103,47,100,101,112,115,47,108,105,98,105,116,111,97,45,48,99,49,54,97,53,97,97,49,50,57,51,53,101,55,48,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"itoa","disambiguator":[10324508235307873734,9884480661701477712]},"crate_root":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.4/src","external_crates":[{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[1174904389790056627,11980377943522478020]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.4/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[10276658452371951978,13955158368012629210]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6212298039852757345,13056973723602582898]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[2472034652193248465,17026985867558116202]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3739559732288738709,15577672448928610229]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[3280591782733940230,2391034779898666253]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.4/src/lib.rs","num":7,"id":{"name":"rustc_demangle","disambiguator":[17768744230194090356,6249204898376423079]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.4/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[18294290771476076947,9562268468698684298]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.4/src/lib.rs","num":9,"id":{"name":"backtrace_sys","disambiguator":[6239912042412093818,71364874345811638]}},{"file_name":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.4/src/lib.rs","num":10,"id":{"name":"panic_unwind","disambiguator":[17618422533075753481,12682123369635823587]}}],"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,105,116,111,97,45,48,46,52,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":11290,"line_start":1,"line_end":342,"column_start":1,"column_end":62}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,105,116,111,97,45,48,46,52,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":11290,"line_start":1,"line_end":342,"column_start":1,"column_end":62},"name":"","qualname":"::","value":"/Users/swilkins/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":74},{"krate":0,"index":76},{"krate":0,"index":24},{"krate":0,"index":28},{"krate":0,"index":32},{"krate":0,"index":38},{"krate":0,"index":42},{"krate":0,"index":46},{"krate":0,"index":50},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":66},{"krate":0,"index":68},{"krate":0,"index":70},{"krate":0,"index":102},{"krate":0,"index":106},{"krate":0,"index":78},{"krate":0,"index":108},{"krate":0,"index":112},{"krate":0,"index":82},{"krate":0,"index":114},{"krate":0,"index":118},{"krate":0,"index":86},{"krate":0,"index":120},{"krate":0,"index":124},{"krate":0,"index":90},{"krate":0,"index":126},{"krate":0,"index":130},{"krate":0,"index":94},{"krate":0,"index":132},{"krate":0,"index":136},{"krate":0,"index":98},{"krate":0,"index":146},{"krate":0,"index":150},{"krate":0,"index":138},{"krate":0,"index":152},{"krate":0,"index":156},{"krate":0,"index":142},{"krate":0,"index":166},{"krate":0,"index":170},{"krate":0,"index":158},{"krate":0,"index":172},{"krate":0,"index":176},{"krate":0,"index":162},{"krate":0,"index":72}],"decl_id":null,"docs":" This crate provides fast functions for printing integer primitives to an\n [`io::Write`] or a [`fmt::Write`]. The implementation comes straight from\n [libcore] but avoids the performance penalty of going through\n [`fmt::Formatter`].","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":20},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,105,116,111,97,45,48,46,52,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2064,"byte_end":2069,"line_start":71,"line_end":71,"column_start":8,"column_end":13},"name":"write","qualname":"::write","value":"fn <W, V> (mut wr: W, value: V) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Write integer to an `io::Write`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,105,116,111,97,45,48,46,52,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2023,"byte_end":2046,"line_start":69,"line_end":69,"column_start":1,"column_end":24}},{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,105,116,111,97,45,48,46,52,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2047,"byte_end":2056,"line_start":70,"line_end":70,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":22},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,105,116,111,97,45,48,46,52,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2316,"byte_end":2319,"line_start":80,"line_end":80,"column_start":8,"column_end":11},"name":"fmt","qualname":"::fmt","value":"fn <W, V> (mut wr: W, value: V) -> fmt::Result","parent":null,"children":[],"decl_id":null,"docs":" Write integer to an `fmt::Write`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,105,116,111,97,45,48,46,52,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2299,"byte_end":2308,"line_start":79,"line_end":79,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":74},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,105,116,111,97,45,48,46,52,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2684,"byte_end":2690,"line_start":95,"line_end":95,"column_start":12,"column_end":18},"name":"Buffer","qualname":"::Buffer","value":"Buffer {  }","parent":null,"children":[{"krate":0,"index":31}],"decl_id":null,"docs":" A safe API for formatting integers to text.","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,105,116,111,97,45,48,46,52,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2673,"byte_end":2725,"line_start":95,"line_end":97,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,105,116,111,97,45,48,46,52,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3070,"byte_end":3073,"line_start":117,"line_end":117,"column_start":12,"column_end":15},"name":"new","qualname":"<Buffer>::new","value":"fn () -> Buffer","parent":null,"children":[],"decl_id":null,"docs":" This is a cheap operation; you don't need to worry about reusing buffers\n for efficiency.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,105,116,111,97,45,48,46,52,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3049,"byte_end":3058,"line_start":116,"line_end":116,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,105,116,111,97,45,48,46,52,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3306,"byte_end":3312,"line_start":125,"line_end":125,"column_start":12,"column_end":18},"name":"format","qualname":"<Buffer>::format","value":"fn <I> (&mut self, i: I) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Print an integer into this buffer and return a reference to its string representation\n within the buffer.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":40},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,105,116,111,97,45,48,46,52,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3479,"byte_end":3485,"line_start":132,"line_end":132,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::private::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":42},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,105,116,111,97,45,48,46,52,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3655,"byte_end":3662,"line_start":138,"line_end":138,"column_start":11,"column_end":18},"name":"Integer","qualname":"::Integer","value":"Integer: private::Sealed","parent":null,"children":[{"krate":0,"index":44}],"decl_id":null,"docs":" An integer that can be formatted by `itoa::write` and `itoa::fmt`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,105,116,111,97,45,48,46,52,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3731,"byte_end":3736,"line_start":141,"line_end":141,"column_start":8,"column_end":13},"name":"write","qualname":"::Integer::write","value":"fn (self, buf: &mut Buffer) -> &str","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,105,116,111,97,45,48,46,52,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2744,"byte_end":2750,"line_start":99,"line_end":99,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":26}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,105,116,111,97,45,48,46,52,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2842,"byte_end":2848,"line_start":106,"line_end":106,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,105,116,111,97,45,48,46,52,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2931,"byte_end":2937,"line_start":113,"line_end":113,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,105,116,111,97,45,48,46,52,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2744,"byte_end":2750,"line_start":99,"line_end":99,"column_start":18,"column_end":24},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":74},"to":{"krate":2,"index":2632}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,105,116,111,97,45,48,46,52,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2842,"byte_end":2848,"line_start":106,"line_end":106,"column_start":16,"column_end":22},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":74},"to":{"krate":2,"index":2598}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,105,116,111,97,45,48,46,52,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2931,"byte_end":2937,"line_start":113,"line_end":113,"column_start":6,"column_end":12},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":74},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,115,119,105,108,107,105,110,115,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,105,116,111,97,45,48,46,52,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3673,"byte_end":3679,"line_start":138,"line_end":138,"column_start":29,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":40},"to":{"krate":0,"index":42}}]}